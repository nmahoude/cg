{"success":{"lastBattles":[{"players":[{"playerAgentId":1164621,"position":0,"userId":335954,"nickname":"nmahoude","publicHandle":"9afa6899fee419ca466331230cbf1aa2459533","avatar":9701936828280},{"playerAgentId":1165519,"position":1,"userId":198916,"nickname":"WhatTrickeryIsThis","publicHandle":"61e8d089025dbb123cd4256f1c845c6a619891","avatar":11611462346371}],"gameId":208258976,"done":true}],"progress":1.0,"viewer":"/*\n * #########################################################\n * ####                                                 ####\n * ####       EDIT FROM HERE                            ####\n * ####                                                 ####\n * #########################################################\n */\n\n function lighten(color, p) {\n   var red \u003d (color \u003e\u003e 16) \u0026 0xff;\n   var green \u003d (color \u003e\u003e 8) \u0026 0xff;\n   var blue \u003d color \u0026 0xff;\n \n   var nred \u003d Math.round((255 - red) * p);\n   var ngreen \u003d Math.round((255 - green) * p);\n   var nblue \u003d Math.round((255 - blue) * p);\n\n   return color + (nred \u003c\u003c 16) + (ngreen \u003c\u003c 8) + nblue;\n }\n\n function generateText(scope, text, size, align, color, forceLato) {\n   var captain \u003d scope.canvasWidth \u003e\u003d 720;\n   var textEl;\n   if (color \u003d\u003d\u003d undefined) {\n     color \u003d 0xffffff;\n   }\n\n   if (captain \u0026\u0026 !forceLato \u0026\u0026 false) {\n     textEl \u003d new PIXI.extras.BitmapText(text, {\n       font: size + \u0027px aldotheapache96\u0027,\n       tint: color\n     });\n     textEl.lineHeight \u003d size;\n   } else {\n     textEl \u003d new PIXI.Text(text, {\n       fontSize: Math.round(size / 1.1) + \"px\",\n       fontFamily: \"Lato\",\n       fontWeight: 700,\n       fill: color\n     });\n     textEl.lineHeight \u003d size;\n   }\n   if (align \u003d\u003d\u003d \u0027right\u0027) {\n     textEl.anchor.x \u003d 1;\n   } else if (align \u003d\u003d\u003d \u0027center\u0027) {\n     textEl.anchor.x \u003d 0.5;\n   } else {\n     textEl.anchor.x \u003d 0;\n   }\n\n   textEl.ellipsis \u003d function(text, width, lines) {\n     if (this.lastText \u003d\u003d\u003d text) {\n       return;\n     }\n\n     this.lastText \u003d text;\n\n     var needEllipsis \u003d false;\n     lines \u003d lines || 1;\n\n     var remText \u003d text;\n     this.text \u003d remText[0];\n     remText \u003d remText.slice(1);\n     while (remText.length \u003e 0) {\n       this.text \u003d this.text + remText[0];\n       while (this.text.length \u003e 3 \u0026\u0026 this.width \u003e width) {\n         if (lines \u003e 1) {\n           this.text \u003d this.text.slice(0, -1) + \"\\n\" + this.text.slice(-1);\n           lines--;\n         } else {\n           this.text \u003d this.text.slice(0, -1);\n           needEllipsis \u003d true;\n         }\n       }\n       remText \u003d remText.slice(1);\n     }\n\n     if (needEllipsis) {\n       this.text +\u003d \u0027...\u0027;\n     }\n\n     while (this.text.length \u003e 3 \u0026\u0026 this.width \u003e width) {\n       this.text \u003d this.text.slice(0, -4) + \u0027...\u0027;\n     }\n   };\n\n   return textEl;\n }\n\n function distance(a, b) {\n   return Math.sqrt(squareDistance(a, b));\n }\n\n function squareDistance(a, b) {\n   return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);\n }\n\nfunction hexCoordinate(row, column) {\n  return {\n    x: column * 51 + 25.5 * (row % 2),\n    y: row * 44.2\n  };\n}\n\nfunction positionToHexCoordinate(position) {\n  var row \u003d Math.round(position.y / 44.2);\n  if (row % 2 \u003d\u003d\u003d 1) {\n    position.x -\u003d 25.5;\n  }\n  var col \u003d Math.round(position.x / 51);\n\n  return {\n    row: row,\n    col: col\n  };\n}\n\nfunction toCubeCoordinate(row, column) {\n  var x \u003d column - (row - (row \u0026 1)) / 2;\n  var z \u003d row;\n  var y \u003d -x - z;\n\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\n\nfunction distanceUsingCubeCoordinates(a, b) {\n  return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2;\n}\n\nfunction paddingString(word, width, char) {\n  char \u003d char || \u0027 \u0027;\n  word \u003d word + \u0027\u0027;\n  return Array(Math.max(width - word.length + 1, 0)).join(char) + word;\n}\n\nfunction forEach(fn) {\n  for (var i in this) {\n    if (this.hasOwnProperty(i) \u0026\u0026 typeof this[i] \u003d\u003d\u003d \u0027object\u0027) {\n      var obj \u003d this[i];\n      fn(obj, i);\n    }\n  }\n}\n/**\n * Shorthand function to get a random integer in [0;a[ or [a;b[\n */\nfunction randInt(a, b) {\n  if (b \u0026\u0026 b \u003e a)\n    return a + Math.floor(Math.random() * (b - a));\n  return Math.floor(Math.random() * a);\n}\n\n/**\n * Gets the number from [a;b] at percentage u\n */\nfunction lerp(a, b, u) {\n  if (a \u003c\u003d b) {\n    return a + (b - a) * u;\n  } else {\n    return b + (a - b) * (1 - u);\n  }\n}\n\n/**\n * Gets the percentage position in [a;b] of number v\n */\nfunction unlerpUnclamped(a, b, v) {\n  return (v - a) / (b - a);\n}\n\n/**\n * Gets the angle between start \u0026 end at percentage amount\n */\nfunction lerpAngle(start, end, amount, maxDelta) {\n  while (end \u003e start + Math.PI)\n    end -\u003d Math.PI * 2;\n  while (end \u003c start - Math.PI)\n    end +\u003d Math.PI * 2;\n  var value;\n  if (maxDelta !\u003d\u003d undefined \u0026\u0026 Math.abs(end - start) \u003e maxDelta) {\n    value \u003d end;\n  } else {\n    value \u003d (start + ((end - start) * amount));\n  }\n  return (value % (Math.PI * 2));\n}\n\n/**\n * Gets the x,y coordinate between 2 points at percentage p\n */\nfunction lerpPosition(from, to, p) {\n  return {\n    x: lerp(from.x, to.x, p),\n    y: lerp(from.y, to.y, p)\n  };\n}\n\n/**\n * Gets the percentage position in [a;b] of number v, clamped into [0;1]\n */\nfunction unlerp(a, b, v) {\n  return Math.min(1, Math.max(0, unlerpUnclamped(a, b, v)));\n}\n\n/**\n * Constant for physics values\n */\nvar Drawer \u003d function() {\n  this.debugMode \u003d false;\n  this.toDestroy \u003d [];\n};\n\nDrawer.requirements \u003d {\n  PIXI: \u0027PIXI4\u0027\n};\nDrawer.VERSION \u003d 2;\nDrawer.WIDTH \u003d 1920;\nDrawer.HEIGHT \u003d 1080;\n\nDrawer.prototype.destroy \u003d function() {\n  if (this.alreadyLoaded) {\n    this.renderer.destroy();\n    this.endCallback \u003d null;\n  }\n  this.destroyed \u003d true;\n};\n\nDrawer.prototype.destroyScene \u003d function(scope) {\n  for (var i \u003d 0, l \u003d this.toDestroy.length; i \u003c l; ++i) {\n    var texture \u003d this.toDestroy[i];\n    texture.destroy(true);\n  }\n  this.toDestroy \u003d [];\n};\n\n/** Mandatory */\nDrawer.prototype.getGameName \u003d function() {\n  return \"CodinGame\";\n};\n\nDrawer.getGameRatio \u003d function() {\n  return Drawer.WIDTH / Drawer.HEIGHT;\n};\n\n/** Mandatory */\nDrawer.prototype.getResources \u003d function() {\n  //var url \u003d \u0027http://192.168.1.5/assets/coders-of-the-caribbean-proto/\u0027;\n  var url \u003d \u0027https://cdn-games.codingame.com/coders-of-the-caribbean/\u0027;\n  return {\n    baseUrl: url,\n    images: {\n      background_pirate: \u0027background_pirate.jpg\u0027,\n      league_boss_gold: \u0027league_boss_gold.png\u0027,\n      league_boss_legend: \u0027league_boss_legend.png\u0027\n    },\n    spines: {},\n    sprites: [\u0027spritesheet.json\u0027, \u0027mine_idle.json\u0027, \u0027supplies_idle.json\u0027, \u0027boat_orange.json\u0027, \u0027boat_red.json\u0027, \u0027cannon_shoot.json\u0027, \u0027boat_burst.json\u0027, \u0027boom_anim.json\u0027, \u0027plouf_anim.json\u0027, \u0027wave_boat_anim.json\u0027, \u0027anim_wave.json\u0027],\n    fonts: [],\n    others: []\n  };\n};\n\nDrawer.prototype.getOptions \u003d function() {\n  var drawer \u003d this;\n  return [{\n    get: function() {\n      return drawer.debugMode;\n    },\n    set: function(value) {\n      drawer.debugModeSetByUser \u003d true;\n      drawer.debugMode \u003d value;\n      drawer.forceReinit();\n    },\n    title: \u0027DEBUG MODE\u0027,\n    values: {\n      \u0027ON\u0027: true,\n      \u0027OFF\u0027: false\n    }\n  }];\n};\n\nDrawer.prototype.getBackground \u003d function() {\n  return 0x1f1d2f;\n};\n\nDrawer.prototype.forceReinit \u003d function() {\n  this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n  this.reinit();\n};\n\n/** Mandatory */\nDrawer.prototype.initPreload \u003d function(scope, container, progress, canvasWidth, canvasHeight) {\n  scope.canvasWidth \u003d canvasWidth;\n  scope.canvasHeight \u003d canvasHeight;\n\n  scope.loaderProgress \u003d new PIXI.Text(\u0027100\u0027, {\n    fontSize: (canvasHeight * 0.117),\n    fontFamily: \u0027Lato\u0027,\n    fontWeight: \u0027900\u0027,\n    fill: \u0027white\u0027,\n    align: \u0027center\u0027\n  });\n\n  scope.loaderProgress.anchor.y \u003d 1;\n  scope.loaderProgress.anchor.x \u003d 1.3;\n  scope.progress \u003d scope.realProgress \u003d progress;\n  scope.loaderProgress.position.y \u003d canvasHeight;\n\n  scope.progressBar \u003d new PIXI.Graphics();\n  container.addChild(scope.progressBar);\n  container.addChild(scope.loaderProgress);\n};\n\n/** Mandatory */\nDrawer.prototype.preload \u003d function(scope, container, progress, canvasWidth, canvasHeight, obj) {\n  scope.progress \u003d progress;\n};\n\n/** Mandatory */\nDrawer.prototype.renderPreloadScene \u003d function(scope, step) {\n  var stepFactor \u003d Math.pow(0.998, step);\n  scope.realProgress \u003d stepFactor * scope.realProgress + (1 - stepFactor) * scope.progress;\n  scope.loaderProgress.text \u003d ((scope.realProgress * 100).toFixed(0));\n  scope.loaderProgress.position.x \u003d scope.realProgress * scope.canvasWidth;\n\n  scope.progressBar.clear();\n\n  scope.progressBar.beginFill(0x0, 1);\n  scope.progressBar.drawRect(0, 0, scope.canvasWidth * scope.realProgress + 1, scope.canvasHeight);\n  scope.progressBar.endFill();\n\n  scope.progressBar.beginFill(0x3f4446, 1);\n  scope.progressBar.drawRect(scope.canvasWidth * scope.realProgress, 0, scope.canvasWidth, scope.canvasHeight);\n  scope.progressBar.endFill();\n  return true;\n};\n\nDrawer.prototype.initDefaultFrames \u003d function(playerCount, frames, playerMapper, playerNames, avatars, playerTypes) {\n  var drawer \u003d this;\n  this.playerInfo \u003d playerNames.slice(0, playerCount).map(function(name, index) {\n    return {\n      name: name || \u0027Anonymous\u0027,\n      color: drawer.colors[playerMapper[index]],\n      number: index,\n      index: playerMapper[index],\n      type: playerTypes[index]\n    };\n  });\n  var firstFrame \u003d frames[0];\n  if (firstFrame[0] \u003d\u003d \u0027-1\u0027) {\n    this.currentFrame \u003d -1;\n    return;\n  }\n  this._frames \u003d frames;\n  this.playerCount \u003d playerCount;\n  this.reasons \u003d [];\n  this.frames \u003d [];\n  this.frames.push(this.parseFrame(this.handleInitFrame(firstFrame), true, this.frames, this.initData));\n  for (var i \u003d 1; i \u003c this._frames.length; ++i) {\n    var temp \u003d this._frames[i];\n    var header \u003d temp[0].split(\" \");\n    if (header.length \u003e 2) {\n      this.reasons[i] \u003d header[2];\n    }\n    this.frames.push(this.parseFrame(temp.slice(1, -1), header[0] \u003d\u003d \u0027KEY_FRAME\u0027, this.frames, this.initData));\n  }\n  this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n  this.currentFrame \u003d -1;\n};\n\n/** Mandatory */\nDrawer.prototype.initDefaultScene \u003d function(scope, container, canvasWidth, canvasHeight) {\n  scope.scene \u003d new PIXI.Container();\n\n  scope.drawer \u003d this;\n  scope.renderables \u003d [];\n  scope.time \u003d 0;\n\n  /** **************************************************************************************************************************************** */\n  var demoContainer \u003d new Drawer.PIXI.Container();\n\n  this.initDefaultFrames(Drawer.DEMO.playerCount, Drawer.DEMO.frames, Drawer.DEMO.playerMapper, Drawer.DEMO.playerNames, Drawer.DEMO.avatars, Drawer.DEMO.playerTypes);\n  this.preconstructScene(this.initData, this.scope, demoContainer, this.initWidth, this.initHeight);\n\n  this.initScene(this.scope, demoContainer, this.frames, true);\n  this.updateScene(this.scope, this.question, this.frames, 0, this.progress, 1, this.reasons[this.currentFrame], true);\n\n  scope.scene.addChild(demoContainer);\n  /** **************************************************************************************************************************************** */\n\n  var logos \u003d new PIXI.Container();\n\n  logos.scale.x \u003d canvasWidth / Drawer.WIDTH;\n  logos.scale.y \u003d canvasHeight / Drawer.HEIGHT;\n\n  var logo \u003d PIXI.Sprite.fromFrame(\u0027logo\u0027);\n  logo.anchor.x \u003d logo.anchor.y \u003d 0.5;\n  logo.position.x \u003d Drawer.WIDTH / 2;\n  logo.position.y \u003d Drawer.HEIGHT / 2;\n  scope.logo \u003d logo;\n  scope.demotime \u003d 0;\n  scope.updateTime \u003d 0;\n  scope.frameTime \u003d 0;\n\n  logos.addChild(logo);\n\n  scope.scene.addChild(logos);\n\n  container.addChild(scope.scene);\n};\n\n/** Mandatory */\nDrawer.prototype.renderDefaultScene \u003d function(scope, step) {\n  this.currentFrame \u003d this.currentFrameTemp || 0;\n  step \u003d Math.min(80, step);\n\n  scope.frameTime +\u003d step;\n  scope.updateTime +\u003d step;\n  scope.demotime +\u003d step / 1000;\n\n  var animProgress \u003d Math.max(0, Math.min(1, (scope.demotime - 1) / 0.5));\n  scope.logo.alpha \u003d animProgress;\n  scope.logo.scale.x \u003d scope.logo.scale.y \u003d Math.max(0.00001, (3 - animProgress * 2));\n\n  var shakeForceMax \u003d 10;\n  var strength \u003d 0.4;\n  var shakeTime \u003d 0, shakeP \u003d 0;\n\n  shakeStart \u003d 1500;\n  shakeTime \u003d 400;\n  shakeP \u003d unlerp(shakeStart, shakeStart + shakeTime, scope.demotime * 1000);\n\n  var shakeForce \u003d shakeP ? lerp(shakeForceMax, 0, unlerp(1 - strength, 1, shakeP)) : 0;\n  var shakeX \u003d shakeForce * Math.cos(2 * scope.demotime * 1000);\n  var shakeY \u003d shakeForce * Math.sin(scope.demotime * 1000);\n\n  scope.scene.x \u003d shakeX;\n  scope.scene.y \u003d shakeY;\n\n\n  var updateInterval \u003d 30;\n  var frameInterval \u003d 480;\n\n  if (scope.updateTime \u003e\u003d updateInterval) {\n    scope.updateTime -\u003d updateInterval;\n    this.progress \u003d unlerp(0, frameInterval, scope.frameTime);\n    this.updateScene(this.scope, this.question, this.frames, this.currentFrame, this.progress, 1, this.reasons[this.currentFrame], true);\n  }\n\n  var alphaBoats \u003d 1;\n  if (scope.frameTime \u003c 0) {\n    alphaBoats \u003d 1 - unlerp(-1000, 0, scope.frameTime);\n  } else if (this.currentFrame \u003c\u003d 3 * this.playerCount) {\n    alphaBoats \u003d unlerp(0, frameInterval + 3 * frameInterval, scope.frameTime + this.currentFrame / this.playerCount * frameInterval);\n  }\n\n  scope.boats.forEach(function(boat) {\n    boat.alpha \u003d alphaBoats;\n  });\n\n  if (scope.frameTime \u003e\u003d frameInterval) {\n    scope.frameTime -\u003d frameInterval;\n    this.currentFrame \u003d this.currentFrame + this.playerCount;\n    if (this.currentFrame \u003e\u003d this.frames.length) {\n      this.currentFrame \u003d 0;\n      scope.updateTime -\u003d 1000;\n      scope.frameTime -\u003d 1000;\n    }\n  }\n\n  this.renderScene(this.scope, this.question, this.frames, this.currentFrame, this.progress, 1, this.reasons[this.currentFrame], step, true);\n\n  this.currentFrameTemp \u003d this.currentFrame;\n  this.currentFrame \u003d -1;\n\n  return true;\n};\n\nDrawer.prototype.endDefaultScene \u003d function(scope, step) {\n  return true;\n};\n\n/** Mandatory */\nDrawer.prototype.parseInitData \u003d function(question, viewLines, playerCount) {\n  var line \u003d 1;\n\n  var raw \u003d viewLines[line++].split(\u0027 \u0027);\n  var width \u003d +raw[0];\n  var height \u003d +raw[1];\n  var boatsPerPlayer \u003d +raw[2];\n  var mineVisibilityRange \u003d +raw[3];\n\n  return {\n    width: width,\n    height: height,\n    playerCount: playerCount,\n    boatsPerPlayer: boatsPerPlayer,\n    mineVisibilityRange: mineVisibilityRange\n  };\n};\n\n/** Mandatory */\nDrawer.prototype.getInitLineCount \u003d function(frame) {\n  return +frame[0];\n};\n\n/** Mandatory */\nDrawer.prototype.parseFrame \u003d function(frame, keyFrame, previousFrames, initData) {\n  var parsedFrame \u003d {};\n\n  parsedFrame.previous \u003d previousFrames[previousFrames.length - 1] || parsedFrame;\n\n  if (!keyFrame) {\n    return parsedFrame.previous;\n  }\n  parsedFrame.frameNumber \u003d previousFrames.length;\n  parsedFrame.keyFrame \u003d true;\n\n  var raw;\n  var line \u003d 0;\n\n  parsedFrame.players \u003d [];\n  for (var i \u003d 0; i \u003c 2; i++) {\n    raw \u003d frame[line++].split(\u0027 \u0027);\n    var id \u003d +raw[0];\n    var boats \u003d [];\n\n    for (var j \u003d 0; j \u003c initData.boatsPerPlayer; j++) {\n      var boatLine \u003d frame[line++];\n      raw \u003d boatLine.split(\u0027 \u0027);\n      var boat \u003d {\n        id: +raw[0],\n        row: +raw[1],\n        column: +raw[2],\n        orientation: +raw[3],\n        health: +raw[4],\n        speed: +raw[5],\n        action: raw[6],\n        bowRow: +raw[7],\n        bowCol: +raw[8],\n        sternRow: +raw[9],\n        sternCol: +raw[10]\n      };\n      boat.message \u003d boatLine.split(\u0027;\u0027)[1];\n      boats.push(boat);\n    }\n    parsedFrame.players.push({\n      id: id,\n      boats: boats\n    });\n  }\n\n  var cannonballCount \u003d frame[line++];\n  parsedFrame.cannonballs \u003d [];\n  for (i \u003d 0; i \u003c cannonballCount; i++) {\n    raw \u003d frame[line++].split(\u0027 \u0027);\n    parsedFrame.cannonballs.push({id: +raw[0], row: +raw[1], column: +raw[2], srcRow: +raw[3], srcCol: +raw[4], initialRemainingTurns: +raw[5], remainingTurns: +raw[6], srcBoat: +raw[7]});\n  }\n\n  var mineCount \u003d frame[line++];\n  parsedFrame.mines \u003d [];\n  for (i \u003d 0; i \u003c mineCount; i++) {\n    raw \u003d frame[line++].split(\u0027 \u0027);\n    parsedFrame.mines.push({id: +raw[0], row: +raw[1], column: +raw[2]});\n  }\n\n  var supplyCount \u003d frame[line++];\n  parsedFrame.supplies \u003d [];\n  for (i \u003d 0; i \u003c supplyCount; i++) {\n    raw \u003d frame[line++].split(\u0027 \u0027);\n    parsedFrame.supplies.push({id: +raw[0], row: +raw[1], column: +raw[2], health: +raw[3]});\n  }\n\n  var damageCount \u003d frame[line++];\n  parsedFrame.damage \u003d [];\n  for (i \u003d 0; i \u003c damageCount; i++) {\n    raw \u003d frame[line++].split(\u0027 \u0027);\n    parsedFrame.damage.push({row: +raw[0], column: +raw[1], health: +raw[2], hit: +raw[3]});\n  }\n\n  return parsedFrame;\n};\n\n/**\n * Adds pixi instance \u0027child\u0027 to pixi instance \u0027container\u0027 as a display child and as a property named \u0027property\u0027\n *\n * @returns the child instance\n */\nDrawer.prototype.sub \u003d function(container, property, child, at) {\n  container[property] \u003d child;\n  if (isNaN(at)) {\n    container.addChild(child);\n  } else {\n    container.addChildAt(child, at);\n  }\n\n  return child;\n};\n\n/**\n * Returns the scale needed to fit (srcWidth, srcHeight) inside (maxWidth, maxHeight)\n */\nDrawer.prototype.fitAspectRatio \u003d function(srcWidth, srcHeight, maxWidth, maxHeight, padding) {\n  padding \u003d padding || 0;\n  return Math.min(maxWidth / (srcWidth + padding), maxHeight / (srcHeight + padding));\n};\n\n/**\n * Interacts with the developer window. For debug purposes.\n */\nDrawer.prototype.customAction \u003d function(param) {\n  var scope \u003d this.scope;\n  var d \u003d scope.drawer;\n  var width \u003d lerp(0, 1920, param);\n  var height \u003d lerp(0, 1080, param);\n  var ratio \u003d Math.min(960 / width, 540 / height);\n  var canvas \u003d document.getElementsByTagName(\u0027canvas\u0027)[0];\n  canvas.width \u003d width;\n  canvas.height \u003d height;\n  canvas.style.width \u003d width + \"px\";\n  canvas.style.height \u003d height + \"px\";\n  this.init(canvas, width, height, null, d.oversampling);\n\n  return param;\n};\n\nDrawer.prototype.preconstructScene \u003d function(initData, scope, container, canvasWidth, canvasHeight) {\n  scope.canvasHeight \u003d canvasHeight;\n  scope.canvasWidth \u003d canvasWidth;\n\n  scope.renderables \u003d [];\n  scope.updatables \u003d [];\n\n  scope.time \u003d 0;\n  scope.endTime \u003d 0;\n\n  scope.initData \u003d initData;\n  scope.playerInfo \u003d this.playerInfo;\n\n  container.scale.x \u003d canvasWidth / Drawer.WIDTH;\n  container.scale.y \u003d canvasHeight / Drawer.HEIGHT;\n};\n\n/** Mandatory */\nDrawer.prototype.initScene \u003d function(scope, container, frames, demo) {\n  var drawer \u003d this;\n  scope.drawer \u003d this;\n  scope.container \u003d container;\n  scope.demo \u003d demo;\n  scope.debugMode \u003d this.debugMode \u0026\u0026 !demo;\n  scope.lastUpdatedFrame \u003d null;\n\n  scope.players \u003d [{}, {}];\n  scope.highlighted \u003d [[], []];\n\n  var background \u003d new PIXI.Sprite.fromFrame(\u0027background_pirate\u0027);\n  background.width +\u003d 40;\n  background.height +\u003d 40;\n  background.position.x -\u003d 20;\n  background.position.y -\u003d 20;\n  container.addChild(background);\n\n  container.addChild(this.createWaves(scope));\n\n  container.addChild(this.createHud(scope));\n\n  scope.mapContainer \u003d this.createMap(scope);\n\n  scope.mapContainer.mousemoveListeners \u003d [];\n  scope.mapContainer.interactive \u003d true;\n  scope.mapContainer.mousemove \u003d function(event) {\n    var position \u003d event.data.getLocalPosition(this);\n    if (position.x \u003e -200) {\n      this.mousemoveListeners.forEach(function(fn) {\n        fn(event);\n      });\n    }\n  };\n\n  \n\n  container.addChild(scope.mapContainer);\n\n  if (!demo) {\n    scope.coordinateTooltip \u003d this.createCoordinateTooltip(scope, scope.mapContainer);\n    scope.tooltip \u003d this.createTooltip(scope, scope.mapContainer);\n    container.addChild(scope.coordinateTooltip, scope.tooltip);\n  \n    scope.end \u003d this.createEndScene(scope, frames[frames.length - 1]);\n    container.addChild(scope.end);\n  }\n};\n\nDrawer.prototype.createFinisher \u003d function(finisher, scope) {\n  var layer \u003d new PIXI.Container();\n\n  /****************************************/\n  var avatarContainer \u003d new PIXI.Container();\n  avatarContainer.position.x \u003d 50;\n  avatarContainer.position.y \u003d 50;\n\n  var avatar \u003d new PIXI.Sprite(finisher.player.avatar);\n  avatar.anchor.x \u003d avatar.anchor.y \u003d 0.5;\n  avatar.width \u003d avatar.height \u003d 105;\n\n  var hudAvatar \u003d new PIXI.Container();\n  hudAvatar.addChild(avatar);\n\n  avatarContainer.addChild(hudAvatar);\n\n  var avatarFrame \u003d new PIXI.Sprite.fromFrame(\u0027avatar\u0027);\n  avatarFrame.anchor.x \u003d avatarFrame.anchor.y \u003d 0.5;\n  avatarContainer.addChild(avatarFrame);\n\n  layer.addChild(avatarContainer);\n  /****************************************/\n\n  var name \u003d generateText(scope, finisher.player.name.toUpperCase(), 54, \u0027left\u0027, finisher.player.color);\n  name.position.x \u003d 180;\n  name.position.y \u003d -10;\n\n  var rank \u003d generateText(scope, finisher.rank.toString(), 72, \u0027left\u0027, finisher.player.color);\n  rank.anchor.y \u003d 0.5;\n  rank.position.x \u003d 180;\n  rank.position.y \u003d 80;\n\n  var rankLetter \u003d generateText(scope, finisher.rank \u003d\u003d 1 ? \u0027ST\u0027 : \u0027ND\u0027.toString(), 42, \u0027left\u0027, finisher.player.color);\n  rankLetter.position.x \u003d 225;\n  rankLetter.position.y \u003d 50;\n\n  layer.addChild(name, rank, rankLetter);\n\n  return layer;\n};\n\nDrawer.prototype.createEndScene \u003d function(scope, lastFrame) {\n  var layer \u003d new PIXI.Container();\n\n  var background \u003d new PIXI.Sprite.fromFrame(\u0027background_pirate\u0027);\n\n  background.width +\u003d 40;\n  background.height +\u003d 40;\n  background.position.x \u003d -20;\n  background.position.y \u003d -20;\n\n  layer.backgroundRanking \u003d background;\n\n  var titleRanking \u003d new PIXI.Sprite.fromFrame(\u0027logo\u0027);\n  titleRanking.anchor.x \u003d titleRanking.anchor.y \u003d 0.5;\n  layer.titleRanking \u003d titleRanking;\n\n  titleRanking.position.x \u003d Drawer.WIDTH / 2;\n  titleRanking.position.y \u003d 250;\n\n  var podium \u003d [];\n  for (var i \u003d 0; i \u003c scope.initData.playerCount; ++i) {\n    var score \u003d lastFrame.players[i].boats.reduce(function(acc, boat) {\n      return acc + boat.health;\n    }, 0);\n    podium.push({\n      score: score,\n      player: scope.playerInfo[i],\n      rank: 0\n    });\n  }\n  podium.sort(function(a, b) {\n    return b.score - a.score;\n  });\n\n  scope.finishers \u003d [];\n  var finishers \u003d new PIXI.Container();\n  var curRank \u003d 1;\n  var elem;\n  for (i \u003d 0; i \u003c podium.length; ++i) {\n    if (i \u003e 0 \u0026\u0026 podium[i-1].score !\u003d podium[i].score) {\n      curRank++;\n    }\n\n    podium[i].rank \u003d curRank;\n    elem \u003d this.createFinisher(podium[i], scope);\n    finishers.addChild(elem);\n    scope.finishers.push(elem);\n  }\n\n  var maxWidth \u003d Math.max(scope.finishers[0].width, scope.finishers[1].width);\n  scope.finishers[0].position.x \u003d (Drawer.WIDTH - maxWidth) / 2;\n  scope.finishers[0].position.y \u003d 520;\n  scope.finishers[1].position.x \u003d (Drawer.WIDTH - maxWidth) / 2;\n  scope.finishers[1].position.y \u003d 710;\n\n  layer.addChild(background);\n  layer.addChild(titleRanking);\n  layer.addChild(finishers);\n\n  layer.visible \u003d false;\n  return layer;\n};\n\nDrawer.prototype.createCoordinateTooltip \u003d function(scope, playground) {\n  var drawer \u003d this;\n  var tooltip \u003d new Drawer.PIXI.Text(\"00,00\", {\n    fontWeight: \u0027900\u0027,\n    fontSize: \u002742px\u0027,\n    fontFamily: \u0027Inconsolata\u0027,\n    fill: \"white\"\n  });\n  tooltip.position.x \u003d 700;\n  tooltip.position.y \u003d 1020;\n  tooltip.visible \u003d false;\n\n  playground.mousemoveListeners.push(function(event) {\n    if (drawer.debugMode) {\n      var point \u003d positionToHexCoordinate(event.data.getLocalPosition(playground));\n\n      if (point.col \u003e\u003d 0 \u0026\u0026 point.col \u003c scope.initData.width \u0026\u0026 point.row \u003e\u003d 0 \u0026\u0026 point.row \u003c scope.initData.height) {\n        scope.coordinateTooltip.visible \u003d true;\n\n        scope.coordinateTooltip.text \u003d \u0027(\u0027 + point.col + \u0027, \u0027 + point.row + \u0027)\u0027;\n\n        drawer.asyncRenderingTime \u003d Drawer.RenderTimeout;\n        return;\n      }\n    }\n    scope.coordinateTooltip.visible \u003d false;\n  });\n\n  return tooltip;\n};\n\nDrawer.prototype.createTooltip \u003d function(scope, playground) {\n  var drawer \u003d this;\n  var tooltip \u003d new Drawer.PIXI.Container();\n  tooltip.position.x \u003d 700;\n  tooltip.position.y \u003d 1020;\n\n  var tooltipBackgroundGraphics \u003d new Drawer.PIXI.Graphics();\n  tooltipBackgroundGraphics.beginFill(0x20252a, 1);\n  tooltipBackgroundGraphics.drawRect(0, 0, 10, 10);\n  tooltipBackgroundGraphics.endFill();\n  var tooltipBackgroundSprite \u003d new Drawer.PIXI.Sprite(this.renderer.generateTexture(tooltipBackgroundGraphics));\n  tooltipBackgroundSprite.alpha \u003d 0.7;\n  tooltip.addChild(tooltipBackgroundSprite);\n\n  var tooltipText \u003d new Drawer.PIXI.Text(\"()\", {\n    fontWeight: \u0027900\u0027,\n    fontSize: \u002732px\u0027,\n    fontFamily: \u0027Inconsolata\u0027,\n    fill: \"white\"\n  });\n\n  tooltipText.position.x \u003d 10;\n  tooltipText.position.y \u003d 5;\n  tooltip.addChild(tooltipText);\n\n  tooltip.tooltipText \u003d tooltipText;\n\n  tooltip.visible \u003d false;\n  tooltip.display \u003d function(point, position) {\n    if (point \u0026\u0026 point.col \u003e\u003d 0 \u0026\u0026 point.col \u003c scope.initData.width \u0026\u0026 point.row \u003e\u003d 0 \u0026\u0026 point.row \u003c scope.initData.height) {\n      var boats \u003d [];\n      scope.boats.forEach(function(boat) {\n        if (boat.frame.health \u003e 0 \u0026\u0026 (boat.frame.row \u003d\u003d\u003d point.row \u0026\u0026 boat.frame.column \u003d\u003d\u003d point.col || boat.frame.bowRow \u003d\u003d\u003d point.row \u0026\u0026 boat.frame.bowCol \u003d\u003d\u003d point.col || boat.frame.sternRow \u003d\u003d\u003d point.row \u0026\u0026 boat.frame.sternCol \u003d\u003d\u003d point.col)) {\n          boats.push(boat.frame);\n        }\n      });\n\n      tooltipText.text \u003d \u0027\u0027;\n\n      if (scope.mines[point.row + \u0027 \u0027 + point.col].visible) {\n        var mine \u003d scope.mines[point.row + \u0027 \u0027 + point.col].frame;\n        tooltipText.text \u003d \u0027Mine \u0027 + mine.id + \u0027\\n\u0027;\n      }\n\n      if (scope.supplies[point.row + \u0027 \u0027 + point.col].visible) {\n        var supply \u003d scope.supplies[point.row + \u0027 \u0027 + point.col].frame;\n        tooltipText.text +\u003d \u0027Barrel \u0027 + supply.id + \u0027\\n\u0027;\n        tooltipText.text +\u003d \u0027Rum: \u0027 + supply.health + \u0027\\n\u0027;\n      }\n\n      boats.forEach(function(boat) {\n        tooltipText.text +\u003d \u0027Ship \u0027 + boat.id + \u0027\\n\u0027;\n        tooltipText.text +\u003d \u0027Position: (\u0027 + boat.column + \u0027, \u0027 + boat.row + \u0027)\\n\u0027;\n        tooltipText.text +\u003d \u0027Orientation: \u0027 + boat.orientation + \u0027\\n\u0027;\n        tooltipText.text +\u003d \u0027Speed: \u0027 + boat.speed + \u0027\\n\u0027;\n        tooltipText.text +\u003d \u0027Action: \u0027 + boat.action + \u0027\\n\u0027;\n        tooltipText.text +\u003d \u0027Rum: \u0027 + boat.health + \u0027\\n\u0027;\n      });\n\n      tooltipText.text \u003d tooltipText.text.trim();\n\n      tooltipBackgroundSprite.width \u003d tooltipText.width + 30;\n      tooltipBackgroundSprite.height \u003d tooltipText.height + 10;\n\n      if (position.x + 40 \u003e Drawer.WIDTH - scope.tooltip.width) {\n        scope.tooltip.position.x \u003d position.x - scope.tooltip.width - 40;\n      } else {\n        scope.tooltip.position.x \u003d position.x + 40;\n      }\n      if (position.y + 20 \u003e Drawer.HEIGHT - scope.tooltip.height) {\n        scope.tooltip.position.y \u003d position.y - scope.tooltip.height - 20;\n      } else {\n        scope.tooltip.position.y \u003d position.y + 20;\n      }\n\n      drawer.asyncRenderingTime \u003d Drawer.RenderTimeout;\n      scope.tooltip.visible \u003d tooltipText.text.length \u003e 1;\n      return;\n    }\n    tooltip.visible \u003d false;\n  };\n  playground.mousemoveListeners.push(function(event) {\n    if (drawer.debugMode) {\n      var point \u003d positionToHexCoordinate(event.data.getLocalPosition(playground));\n      scope.tooltip.display(point, event.data.getLocalPosition(tooltip.parent));\n    }\n  });\n\n  return tooltip;\n};\n\nDrawer.prototype.createMap \u003d function(scope) {\n  var mapContainer \u003d new PIXI.Container();\n  var labelsContainer \u003d new PIXI.Container();\n  var cellContainer \u003d new PIXI.Container();\n  scope.mineContainer \u003d new PIXI.Container();\n  scope.supplyContainer \u003d new PIXI.Container();\n\n  mapContainer.position.x \u003d 710;\n  mapContainer.position.y \u003d 95;\n  scope.cells \u003d {};\n  scope.cells.forEach \u003d forEach;\n  scope.visibleCells \u003d {};\n  scope.visibleCells.forEach \u003d forEach;\n  scope.boats \u003d {};\n  scope.boats.forEach \u003d forEach;\n  scope.mines \u003d {};\n  scope.mines.forEach \u003d forEach;\n  scope.supplies \u003d {};\n  scope.supplies.forEach \u003d forEach;\n\n  scope.cannonballs \u003d {};\n  scope.cannonballs.forEach \u003d forEach;\n\n  scope.damage \u003d {};\n  scope.damage.forEach \u003d forEach;\n\n  var i, j;\n\n  if (scope.debugMode) {\n    var textEl;\n    for (i \u003d 0; i \u003c scope.initData.height; i++) {\n      textEl \u003d new PIXI.Text(i, {\n        fontSize: \"24px\",\n        fontFamily: \"Lato\",\n        fontWeight: 700,\n        fill: 0xffffff\n      });\n      textEl.anchor.x \u003d 1;\n      textEl.anchor.y \u003d 0.5;\n      textEl.alpha \u003d 0.6;\n      textEl.position.x \u003d -46;\n      textEl.position.y \u003d i * 44.2;\n      labelsContainer.addChild(textEl);\n    }\n    for (i \u003d 0; i \u003c scope.initData.width; i++) {\n      textEl \u003d new PIXI.Text(i, {\n        fontSize: \"24px\",\n        fontFamily: \"Lato\",\n        fontWeight: 700,\n        fill: 0xffffff\n      });\n      textEl.anchor.x \u003d 1;\n      textEl.anchor.y \u003d 0.5;\n      textEl.alpha \u003d 0.6;\n      textEl.position.x \u003d 8 + i * 51;\n      textEl.position.y \u003d -60;\n      labelsContainer.addChild(textEl);\n    }\n  }\n\n  for (i \u003d 0; i \u003c scope.initData.height; i++) {\n    for (j \u003d 0; j \u003c scope.initData.width; j++) {\n      var offsetAnimation \u003d j + (i - (i\u00261)) / 2;\n\n      var cell \u003d new PIXI.Sprite.fromFrame(\u0027hexagon2\u0027);\n      cell.alpha \u003d 0.2 + ((j + 1) % 2) / 2.5;\n      cell.width \u003d 53;\n      cell.scale.y \u003d cell.scale.x;\n      cell.anchor.x \u003d cell.anchor.y \u003d 0.5;\n      cell.position \u003d hexCoordinate(i, j);\n      cell.visible \u003d scope.debugMode;\n      cellContainer.addChild(cell);\n      scope.cells[i + \u0027 \u0027 + j] \u003d cell;\n\n      cell \u003d new PIXI.Sprite.fromFrame(\u0027hexagon\u0027);\n      cell.blendMode \u003d Drawer.PIXI.BLEND_MODES.ADD;\n      cell.alpha \u003d 0.07;\n      cell.width \u003d 53;\n      cell.scale.y \u003d cell.scale.x;\n      cell.anchor.x \u003d cell.anchor.y \u003d 0.5;\n      cell.position \u003d hexCoordinate(i, j);\n      cell.visible \u003d false;\n      cellContainer.addChild(cell);\n      scope.visibleCells[i + \u0027 \u0027 + j] \u003d cell;\n\n      var mine \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.MINE);\n      if (scope.debugMode) {\n        mine.tint \u003d 0xff9999;\n      }\n      mine.loop \u003d true;\n      mine.animationSpeed \u003d 0.15;\n      mine.position \u003d hexCoordinate(i, j);\n      mine.gotoAndPlay(offsetAnimation % mine.textures.length);\n      mine.anchor.x \u003d mine.anchor.y \u003d 0.5;\n      mine.scale.x \u003d mine.scale.y \u003d 0.8;\n      mine.visible \u003d false;\n      scope.mineContainer.addChild(mine);\n      scope.mines[i + \u0027 \u0027 + j] \u003d mine;\n\n\n      var supply \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.SUPPLIES);\n      supply.loop \u003d true;\n      supply.animationSpeed \u003d 0.15;\n      supply.gotoAndPlay(offsetAnimation % supply.textures.length);\n      supply.visible \u003d false;\n      supply.position \u003d hexCoordinate(i, j);\n      supply.anchor.x \u003d supply.anchor.y \u003d 0.5;\n      supply.scale.x \u003d supply.scale.y \u003d 0.8;\n      scope.supplyContainer.addChild(supply);\n      scope.supplies[i + \u0027 \u0027 + j] \u003d supply;\n    }\n  }\n\n  mapContainer.addChild(labelsContainer, cellContainer, scope.mineContainer, scope.supplyContainer);\n\n  for (i \u003d 0; i \u003c 2; i++) {\n    scope.players[i].boats \u003d [];\n  }\n\n  for (j \u003d 0; j \u003c scope.initData.boatsPerPlayer; j++) {\n    for (i \u003d 0; i \u003c 2; i++) {\n      var player \u003d scope.playerInfo[i];\n      var boat \u003d new PIXI.Container();\n\n      var boatSprite \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.BOATS[player.index]);\n      var startAnim \u003d randInt(boatSprite.textures.length);\n      boatSprite.animationSpeed \u003d 0.4;\n      boatSprite.gotoAndPlay(startAnim);\n      boatSprite.anchor.x \u003d boatSprite.anchor.y \u003d 0.5;\n      boatSprite.width \u003d 200;\n      boatSprite.scale.y \u003d boatSprite.scale.x;\n\n      var prevBoatSprite \u003d new PIXI.Sprite.fromFrame(Drawer.FX.BOATS[player.index][0]);\n      prevBoatSprite.anchor.x \u003d prevBoatSprite.anchor.y \u003d 0.5;\n      prevBoatSprite.width \u003d 200;\n      prevBoatSprite.scale.y \u003d prevBoatSprite.scale.x;\n      prevBoatSprite.visible \u003d scope.debugMode;\n      prevBoatSprite.alpha \u003d 0.4;\n\n      var sailSprite \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.SAILS[player.index][j]);\n      sailSprite.animationSpeed \u003d 0.4;\n      sailSprite.gotoAndPlay(startAnim);\n      sailSprite.anchor.x \u003d sailSprite.anchor.y \u003d 0.5;\n      sailSprite.width \u003d 200;\n      sailSprite.scale.y \u003d sailSprite.scale.x;\n\n      var cannonSprite \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.CANNON_SHOOT);\n      cannonSprite.position.y \u003d -36;\n      cannonSprite.visible \u003d false;\n      cannonSprite.animationSpeed \u003d 0.1;\n      cannonSprite.anchor.x \u003d cannonSprite.anchor.y \u003d 0.5;\n      cannonSprite.width \u003d 100;\n      cannonSprite.scale.y \u003d cannonSprite.scale.x;\n\n      var waveSprite \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.BOAT_WAVE);\n      waveSprite.gotoAndPlay(startAnim);\n      waveSprite.visible \u003d false;\n      waveSprite.animationSpeed \u003d 0.08;\n      waveSprite.anchor.x \u003d waveSprite.anchor.y \u003d 0.5;\n      waveSprite.width \u003d 220;\n      waveSprite.scale.y \u003d waveSprite.scale.x;\n\n      var explosionSprite \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.BOAT_BURST);\n      explosionSprite.anchor.x \u003d explosionSprite.anchor.y \u003d 0.5;\n      explosionSprite.width \u003d 200;\n      explosionSprite.scale.y \u003d explosionSprite.scale.x;\n\n      boat.prevBoatSprite \u003d prevBoatSprite;\n      boat.boatSprite \u003d boatSprite;\n      boat.sailSprite \u003d sailSprite;\n      boat.cannonSprite \u003d cannonSprite;\n      boat.explosionSprite \u003d explosionSprite;\n      boat.waveSprite \u003d waveSprite;\n      boat.addChild(waveSprite, boatSprite, sailSprite, cannonSprite, explosionSprite);\n\n      mapContainer.addChild(prevBoatSprite, boat);\n      scope.players[i].boats.push(boat);\n      boat.interactive \u003d true;\n      /*boat.mouseover \u003d function() {\n        scope.highlighted[i][j] \u003d true;\n      }\n      boat.mouseout \u003d function() {\n        scope.highlighted[i][j] \u003d false;\n      }*/\n      boat.render \u003d Drawer.renderBoat;\n      boat.player \u003d i;\n      boat.index \u003d j;\n      scope.renderables.push(boat);\n\n      scope.boats[2 * j + i] \u003d boat;\n    }\n  }\n\n  return mapContainer;\n};\n\n\nDrawer.prototype.getHighlightFunction \u003d function(scope, boat, player, index, enable) {\n  return function() {\n    scope.highlighted[player][index] \u003d enable;\n  };\n};\n\nDrawer.prototype.createWaves \u003d function(scope) {\n  var container \u003d new PIXI.Container();\n\n  var waves \u003d [];\n  var currentWave \u003d 0;\n  for (var i \u003d 0; i \u003c 10; i++) {\n    var wave \u003d PIXI.extras.AnimatedSprite.fromFrames(Drawer.FX.WAVE);\n    wave.animationSpeed \u003d 0.4;\n    wave.loop \u003d false;\n    wave.visible \u003d false;\n    container.addChild(wave);\n    waves.push(wave);\n  }\n\n  container.render \u003d function() {\n    var randomValue \u003d Math.random();\n    if (randomValue \u003e 0.985) {\n      var wave \u003d waves[currentWave];\n      wave.position.x \u003d randInt(1920);\n      wave.position.y \u003d randInt(1080);\n      wave.scale.x \u003d wave.scale.y \u003d 0.75 + Math.random() / 2;\n      wave.gotoAndPlay(0);\n      wave.visible \u003d true;\n\n      currentWave \u003d (currentWave + 1) % waves.length;\n    }\n  };\n  scope.renderables.push(container);\n\n\n  return container;\n};\n\nDrawer.prototype.createHud \u003d function(scope) {\n  var hudc \u003d new PIXI.Container();\n  var drawer \u003d this;\n\n  hudc.addChild(new PIXI.Sprite.fromFrame(\u0027ui_sd\u0027));\n\n  scope.players.forEach(function(player, index) {\n    var playerInfo \u003d scope.playerInfo[index];\n    var phud \u003d new PIXI.Container();\n\n    // Player avatar\n    var avatarContainer \u003d new PIXI.Container();\n    avatarContainer.position.x \u003d 130;\n    avatarContainer.position.y \u003d 180;\n\n    var avatar;\n    if (scope.demo) {\n      avatar \u003d new PIXI.Sprite.fromFrame(index ? \u0027league_boss_legend\u0027 : \u0027league_boss_gold\u0027);\n      avatar.anchor.x \u003d avatar.anchor.y \u003d 0.5;\n      avatar.width \u003d avatar.height \u003d 105;\n    } else {\n      avatar \u003d new PIXI.Sprite(playerInfo.avatar);\n      avatar.anchor.x \u003d avatar.anchor.y \u003d 0.5;\n      avatar.width \u003d avatar.height \u003d 105;\n    }\n    \n\n    avatarContainer.addChild(avatar);\n\n    var avatarFrame \u003d new PIXI.Sprite.fromFrame(\u0027avatar\u0027);\n    avatarFrame.anchor.x \u003d avatarFrame.anchor.y \u003d 0.5;\n    avatarContainer.addChild(avatarFrame);\n\n    phud.addChild(avatarContainer);\n    // ---\n\n    // Player nickname\n    var hudName \u003d generateText(scope, \"\", 40, \u0027left\u0027, playerInfo.color);\n    hudName.anchor.y \u003d 0.5;\n    hudName.ellipsis(playerInfo.name.toUpperCase(), 390);\n    hudName.position.x \u003d 225;\n    hudName.position.y \u003d 180;\n    phud.addChild(hudName);\n    // ---\n\n    var flags \u003d [\u0027codingame\u0027, \u0027sabers\u0027, \u0027skull\u0027];\n    var boatStatHeight \u003d 90;\n\n    var mouseover \u003d function() {\n      scope.highlighted[this.player][this.index] \u003d true;\n      this.boat \u003d scope.players[this.player].boats[this.index];\n\n      this.update \u003d function() {\n        if (this.boat) {\n          var position \u003d this.boat.position;\n          position.x +\u003d scope.mapContainer.position.x;\n          position.y +\u003d scope.mapContainer.position.y;\n          if (scope.tooltip) {\n            scope.tooltip.display({row: this.boat.frame.row, col: this.boat.frame.column}, position);\n          }\n          return false;\n        } else {\n          return true;\n        }\n      };\n      this.update();\n\n      scope.updatables.push(this);\n    };\n\n    var mouseout \u003d  function() {\n      this.boat \u003d null;\n      scope.highlighted[this.player][this.index] \u003d false;\n      if (scope.tooltip) {\n        scope.tooltip.display();\n      }\n    };\n\n    // Boat info\n    var hudBoatHealths \u003d [];\n    for (var i \u003d 0; i \u003c scope.initData.boatsPerPlayer; i++) {\n      var boatInfo \u003d new PIXI.Container();\n      boatInfo.position.y \u003d 320 + i * boatStatHeight;\n\n      var flag \u003d new PIXI.Sprite.fromFrame((playerInfo.index \u003d\u003d\u003d 0 ? \u0027orange_\u0027 : \u0027red_\u0027) + flags[i]);\n      flag.height \u003d 60;\n      flag.scale.x \u003d flag.scale.y;\n      flag.position.x \u003d 50;\n      flag.anchor.y \u003d 0.5;\n      boatInfo.addChild(flag);\n\n      var gaugeEmpty \u003d new PIXI.Sprite.fromFrame(\u0027bar_empty\u0027);\n      gaugeEmpty.height \u003d 60;\n      gaugeEmpty.position.x \u003d 180;\n      gaugeEmpty.anchor.y \u003d 0.5;\n      boatInfo.addChild(gaugeEmpty);\n\n      var gauge \u003d new PIXI.Sprite.fromFrame(playerInfo.index \u003d\u003d\u003d 0 ? \u0027bar_orange\u0027 : \u0027bar_red\u0027);\n      gauge.height \u003d 60;\n      gauge.position.x \u003d 180;\n      gauge.anchor.y \u003d 0.5;\n      boatInfo.addChild(gauge);\n\n      var mask \u003d new PIXI.Graphics();\n      mask.player \u003d index;\n      mask.boatIndex \u003d i;\n      mask.beginFill(0xff0000);\n\n      mask.update \u003d function(frameNumber, progress, frame) {\n        var currentFrame \u003d progress \u003e 0.9 ? frame : frame.previous;\n        var health \u003d currentFrame.players[this.player].boats[this.boatIndex].health;\n        this.clear();\n        this.drawRect(180, -50, 26 + health, 100);\n      };\n      scope.updatables.push(mask);\n\n      boatInfo.addChild(mask);\n      gauge.mask \u003d mask;\n\n      var barrelIcon \u003d new PIXI.Sprite.fromFrame(\u0027barrel_icon\u0027);\n      barrelIcon.position.x \u003d 120;\n      barrelIcon.anchor.y \u003d 0.5;\n      boatInfo.addChild(barrelIcon);\n\n      var hudBoatHealth \u003d generateText(scope, \u00270\u0027, 34, \u0027center\u0027, lighten(playerInfo.color, 1));\n      hudBoatHealth.position.x \u003d 250;\n      hudBoatHealth.anchor.y \u003d 0.5;\n      hudBoatHealths.push(hudBoatHealth);\n\n      var hudBoatMessage \u003d generateText(scope, \u0027\u0027, 36, \u0027left\u0027, playerInfo.color);\n      hudBoatMessage.position.x \u003d 347;\n      hudBoatMessage.anchor.y \u003d 0.5;\n      hudBoatMessage.update \u003d Drawer.updateMessage;\n      hudBoatMessage.player \u003d index;\n      hudBoatMessage.index \u003d i;\n      scope.updatables.push(hudBoatMessage);\n\n      boatInfo.addChild(hudBoatHealth);\n      boatInfo.addChild(hudBoatMessage);\n\n      boatInfo.player \u003d index;\n      boatInfo.index \u003d i;\n\n      boatInfo.interactive \u003d true;\n      boatInfo.mouseover \u003d mouseover;\n      boatInfo.mouseout \u003d mouseout;\n\n      phud.addChild(boatInfo);\n    }\n    // ---\n\n    // ---\n\n    var update \u003d function(frameNumber, progress, frame, scope) {\n      var currentFrame \u003d progress \u003e 0.9 ? frame : frame.previous;\n      for (var i \u003d 0; i \u003c scope.initData.boatsPerPlayer; i++) {\n        this.health[i].text \u003d currentFrame.players[this.index].boats[i].health.toString();\n      }\n    };\n\n    player.hud \u003d {\n      playerInfo: playerInfo,\n      index: index,\n      name: hudName,\n      health: hudBoatHealths,\n      avatarContainer: avatarContainer,\n      update: update\n    };\n\n    scope.updatables.push(player.hud);\n\n\n    if (index \u003d\u003d 1) {\n      phud.y +\u003d 220 + boatStatHeight * scope.initData.boatsPerPlayer;\n    }\n\n    hudc.addChild(phud);\n  });\n\n  return hudc;\n};\n\nDrawer.renderBoat \u003d function(step, scope, frame) {\n  if (scope.highlighted[this.player][this.index]) {\n    scope.players[this.player].hud.health[this.index].style.fill \u003d lighten(scope.playerInfo[this.player].color, 0.7);\n    this.sailSprite.blendMode \u003d PIXI.BLEND_MODES.ADD;\n  } else {\n    scope.players[this.player].hud.health[this.index].style.fill \u003d lighten(scope.playerInfo[this.player].color, 0.3);\n    this.sailSprite.blendMode \u003d PIXI.BLEND_MODES.NORMAL;\n  }\n  this.boatSprite.animationSpeed \u003d this.sailSprite.animationSpeed \u003d 0.2 * frame.players[this.player].boats[this.index].speed;\n  this.waveSprite.animationSpeed \u003d 0.1 * frame.players[this.player].boats[this.index].speed;\n  this.waveSprite.visible \u003d frame.players[this.player].boats[this.index].speed \u003e 0 \u0026\u0026 frame.players[this.player].boats[this.index].health;\n};\n\nDrawer.wordWrap \u003d function(text) {\n\n  var wordWrapWidth \u003d this._style.wordWrapWidth;\n  var self \u003d this;\n  text \u003d text.replace(/\\w+/g, function(text) {\n    if (self.context.measureText(text).width \u003e wordWrapWidth) {\n      var list \u003d [];\n      while (text.length \u003e 0) {\n        var length \u003d 1;\n        while (length \u003c\u003d text.length \u0026\u0026 self.context.measureText(text.slice(0, length)).width \u003c wordWrapWidth) {\n          length++;\n        }\n        list.push(text.slice(0, length - 1));\n        text \u003d text.slice(length - 1);\n      }\n      return list.join(\u0027\\n\u0027);\n    }\n    return text;\n  });\n  return this._wordWrap(text);\n};\n\nDrawer.updateMessage \u003d function(frameNumber, progress, frame, scope) {\n\n  var state \u003d frame.players[this.player].boats[this.index];\n  var previousState \u003d frame.previous.players[this.player].boats[this.index];\n\n  if (state.message) {\n    this.visible \u003d true;\n    this.ellipsis(state.message, 310);\n  } else {\n    this.visible \u003d false;\n  }\n};\n\n/**\n * A few transition functions contained within [0,1] on both axes\n */\nDrawer.BELL \u003d function(x) {\n  return 1 - Math.pow((x - 0.5) * 2, 2);\n};\nDrawer.ELASTIC \u003d function(t) {\n  var b \u003d 0, c \u003d 1, d \u003d 1;\n  var s \u003d 1.70158;\n  var p \u003d 0;\n  var a \u003d c;\n  if (t \u003d\u003d\u003d 0)\n    return b;\n  if ((t /\u003d d) \u003d\u003d\u003d 1)\n    return b + c;\n  if (!p)\n    p \u003d d * 0.3;\n  if (a \u003c Math.abs(c)) {\n    a \u003d c;\n    s \u003d p / 4;\n  } else\n    s \u003d p / (2 * Math.PI) * Math.asin(c / a);\n  return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n};\nDrawer.EASE \u003d function(t) {\n  return t \u003c 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n};\n\nDrawer.prototype.updateBoatsPosition \u003d function(scope, frame, frameNumber, progress) {\n  for (i \u003d 0; i \u003c 2; i++) {\n    for (j \u003d 0; j \u003c scope.initData.boatsPerPlayer; j++) {\n      var frameBoat \u003d frame.players[i].boats[j];\n      var previousFrameBoat \u003d frame.previous.players[i].boats[j];\n      var previous2FrameBoat \u003d frame.previous.previous.players[i].boats[j];\n      var gBoat \u003d scope.players[i].boats[j];\n      var currentPosition \u003d hexCoordinate(frameBoat.row, frameBoat.column);\n      var previousPosition \u003d hexCoordinate(previousFrameBoat.row, previousFrameBoat.column);\n\n      gBoat.frame \u003d frameBoat;\n\n      // Boat destruction\n      if (previousFrameBoat.health \u003c\u003d 0 \u0026\u0026 previous2FrameBoat.health \u003e 0 || frameNumber \u003d\u003d\u003d frames.length - 1 \u0026\u0026 progress \u003d\u003d\u003d 1 \u0026\u0026 frameBoat.health \u003c\u003d 0 \u0026\u0026 previousFrameBoat.health \u003e 0) {\n        p \u003d progress;\n        if (frameNumber \u003d\u003d\u003d frames.length - 1 \u0026\u0026 progress \u003d\u003d\u003d 1) {\n          p \u003d 0;\n        }\n        gBoat.explosionSprite.visible \u003d true;\n        gBoat.explosionSprite.animationSpeed \u003d 0.4;\n        gBoat.explosionSprite.loop \u003d false;\n        gBoat.explosionSprite.gotoAndPlay(Math.round((gBoat.explosionSprite.textures.length - 1) * p));\n      } else {\n        gBoat.explosionSprite.visible \u003d false;\n      }\n\n      if (previousFrameBoat.health \u003c\u003d 0 || frameNumber \u003d\u003d\u003d frames.length - 1 \u0026\u0026 progress \u003d\u003d\u003d 1 \u0026\u0026 frameBoat.health \u003c\u003d 0) {\n        gBoat.boatSprite.visible \u003d gBoat.waveSprite.visible \u003d gBoat.sailSprite.visible \u003d false;\n      } else {\n        gBoat.boatSprite.visible \u003d gBoat.waveSprite.visible \u003d gBoat.sailSprite.visible \u003d true;\n      }\n\n      gBoat.prevBoatSprite.visible \u003d scope.speed \u003d\u003d\u003d 0 \u0026\u0026 scope.debugMode \u0026\u0026 previousFrameBoat.health \u003e 0;\n\n      var prevOrientation \u003d previousFrameBoat.orientation;\n      var curOrientation \u003d frameBoat.orientation;\n\n      if (scope.speed \u003e\u003d 1) {\n\n        var src \u003d toCubeCoordinate(previousFrameBoat.row, previousFrameBoat.column);\n        var dst \u003d toCubeCoordinate(frameBoat.row, frameBoat.column);\n\n        var boatSpeed \u003d distanceUsingCubeCoordinates(src, dst);\n\n        // Could be refactored to use the cube coordinate already computed.\n        //var directionsCube \u003d [ [+1, -1,  0],[+1,  0, -1],[ 0, +1, -1], [-1, +1,  0],[-1,  0, +1],[ 0, -1, +1]];\n        var directions \u003d [ // col, row\n          [ [+1,  0], [ 0, -1], [-1, -1], [-1,  0], [-1, +1], [ 0, +1] ],\n          [ [+1,  0], [+1, -1], [ 0, -1], [-1,  0], [ 0, +1], [+1, +1] ]\n        ];\n\n        var center \u003d {\n          row: previousFrameBoat.row,\n          column: previousFrameBoat.column\n        };\n        while (boatSpeed) {\n          var dir \u003d directions[center.row \u0026 1][curOrientation];\n          center.row \u003d center.row + dir[1];\n          center.column \u003d center.column + dir[0];\n          boatSpeed--;\n        }\n\n        var centerPosition \u003d hexCoordinate(center.row, center.column);\n\n        var a \u003d {\n          x: previousPosition.x - centerPosition.x,\n          y: previousPosition.y - centerPosition.y\n        };\n        var b \u003d {\n          x: currentPosition.x - centerPosition.x,\n          y: currentPosition.y - centerPosition.y\n        };\n\n        a.r \u003d Math.sqrt(a.x * a.x + a.y * a.y);\n        a.theta \u003d Math.atan2(a.y, a.x);\n\n        b.r \u003d Math.sqrt(b.x * b.x + b.y * b.y);\n        b.theta \u003d Math.atan2(b.y, b.x);\n\n        if (a.theta \u003c b.theta - Math.PI) {\n          a.theta +\u003d 2 * Math.PI;\n        } else if (b.theta \u003c a.theta - Math.PI) {\n          b.theta +\u003d 2 * Math.PI;\n        }\n\n        if (b.r \u003d\u003d\u003d 0) {\n          b.theta \u003d a.theta;\n        }\n\n        if (a.r \u003d\u003d\u003d 0) {\n          a.theta \u003d b.theta;\n        }\n\n        var c \u003d {\n          r: lerp(a.r, b.r, progress),\n          theta: lerp(a.theta, b.theta, progress)\n        };\n\n        c.x \u003d c.r * Math.cos(c.theta);\n        c.y \u003d c.r * Math.sin(c.theta);\n\n        if (prevOrientation \u003c curOrientation - 3) {\n          prevOrientation +\u003d 6;\n        } else if (curOrientation \u003c prevOrientation - 3) {\n          curOrientation +\u003d 6;\n        }\n\n        gBoat.targetPosition \u003d {\n          x: c.x + centerPosition.x,\n          y: c.y + centerPosition.y\n        };\n        gBoat.targetRotation \u003d - (curOrientation * progress + prevOrientation * (1 - progress)) * Math.PI / 3 + Math.PI / 2;\n      } else {\n        if (progress \u003c 0.9) {\n          gBoat.targetRotation \u003d - prevOrientation * Math.PI / 3 + Math.PI / 2;\n        } else {\n          gBoat.targetRotation \u003d - curOrientation * Math.PI / 3 + Math.PI / 2;\n        }\n        gBoat.targetPosition \u003d lerpPosition(previousPosition, currentPosition, progress);\n      }\n\n      gBoat.prevTargetRotation \u003d - prevOrientation * Math.PI / 3 + Math.PI / 2;\n      gBoat.prevTargetPosition \u003d previousPosition;\n    }\n  }\n};\n\nDrawer.prototype.updateMines \u003d function(scope, frame, progress) {\n  var i;\n  var mine;\n\n  scope.mines.forEach(function(mine) {\n    mine.visible \u003d false;\n  });\n\n  for (i \u003d 0; i \u003c frame.previous.mines.length; i++) {\n    mine \u003d scope.mines[frame.previous.mines[i].row + \u0027 \u0027 + frame.previous.mines[i].column];\n    mine.alpha \u003d 1 - progress;\n    mine.visible \u003d true;\n  }\n\n  for (i \u003d 0; i \u003c frame.mines.length; i++) {\n    mine \u003d scope.mines[frame.mines[i].row + \u0027 \u0027 + frame.mines[i].column];\n    mine.visible \u003d true;\n    mine.alpha \u003d mine.alphaWhenVisible;\n    mine.frame \u003d frame.mines[i];\n  }\n};\n\nDrawer.prototype.updateSupplies \u003d function(scope, frame, progress) {\n  var i;\n  var supply;\n\n  scope.supplies.forEach(function(supply) {\n    supply.visible \u003d false;\n  });\n\n  for (i \u003d 0; i \u003c frame.previous.supplies.length; i++) {\n    supply \u003d scope.supplies[frame.previous.supplies[i].row + \u0027 \u0027 + frame.previous.supplies[i].column];\n    supply.alpha \u003d 1 - progress;\n    supply.visible \u003d true;\n  }\n\n  for (i \u003d 0; i \u003c frame.supplies.length; i++) {\n    supply \u003d scope.supplies[frame.supplies[i].row + \u0027 \u0027 + frame.supplies[i].column];\n    supply.visible \u003d true;\n    supply.alpha \u003d 1;\n    supply.frame \u003d frame.supplies[i];\n  }\n\n  scope.damage.forEach(function(damage) {\n    damage.visible \u003d false;\n  });\n};\n\nDrawer.prototype.updateVisibleCells \u003d function(scope, frame) {\n  for (i \u003d 0; i \u003c scope.initData.height; i++) {\n    for (j \u003d 0; j \u003c scope.initData.width; j++) {\n      var cell \u003d scope.visibleCells[i + \u0027 \u0027 + j];\n\n      var visible \u003d false;\n\n      for (k \u003d 0; k \u003c scope.initData.boatsPerPlayer; k++) {\n        var dist1 \u003d 9999;\n        var dist2 \u003d 9999;\n        if (frame.players[0].boats[k].health \u003e 0) { // TODO option to disable\n          dist1 \u003d distanceUsingCubeCoordinates(toCubeCoordinate(i, j), toCubeCoordinate(frame.players[0].boats[k].row, frame.players[0].boats[k].column));\n        }\n        if (frame.players[1].boats[k].health \u003e 0) { // TODO option to disable\n          dist2 \u003d distanceUsingCubeCoordinates(toCubeCoordinate(i, j), toCubeCoordinate(frame.players[1].boats[k].row, frame.players[1].boats[k].column));\n        }\n        if (dist1 \u003c\u003d scope.initData.mineVisibilityRange || dist2 \u003c\u003d scope.initData.mineVisibilityRange) {\n          visible \u003d true;\n        }\n      }\n\n      scope.mines[i + \u0027 \u0027 + j].alphaWhenVisible \u003d visible ? 1 : 0.6;\n      if (scope.debugMode) {\n        cell.visible \u003d visible;        \n      } else {\n        cell.visible \u003d false;\n      }\n    }\n  }\n};\n\n/** Mandatory */\nDrawer.prototype.updateScene \u003d function(scope, question, frames, frameNumber, progress, speed, reason, demo) {\n  /** ************************************* */\n  /*        SYNCHRONOUS                     */\n  /** ************************************* */\n\n  var frame \u003d frames[frameNumber];\n  scope.currentFrame \u003d frame;\n  scope.currentProgress \u003d progress;\n  scope.reason \u003d reason;\n  scope.speed \u003d speed;\n\n  var i, j, k, p;\n\n  if (scope.lastUpdatedFrame !\u003d\u003d frameNumber) {\n    this.updateVisibleCells(scope, frame);\n  }\n\n  this.updateBoatsPosition(scope, frame, frameNumber, progress);\n\n  this.updateMines(scope, frame, progress);\n  \n  this.updateSupplies(scope, frame, progress);\n\n  \n\n  var frameDamage \u003d (progress \u003e 0.9) ? frame : frame.previous;\n  for (i \u003d 0; i \u003c frameDamage.damage.length; i++) {\n    var id \u003d frameDamage.damage[i].row + \u0027 \u0027 + frameDamage.damage[i].column + \u0027 \u0027 + frameDamage.frameNumber;\n    if (!scope.damage[id]) {\n      scope.damage[id] \u003d PIXI.extras.AnimatedSprite.fromFrames(frameDamage.damage[i].hit ? Drawer.FX.BOOM : Drawer.FX.PLOUF);\n      if (frameDamage.damage[i].hit) {\n        scope.mapContainer.addChild(scope.damage[id]);\n      } else {\n        scope.mapContainer.addChildAt(scope.damage[id], 2);\n      }\n      scope.damage[id].width \u003d 150;\n      scope.damage[id].scale.y \u003d scope.damage[id].scale.x;\n      scope.damage[id].anchor.x \u003d scope.damage[id].anchor.y \u003d 0.5;\n      scope.damage[id].loop \u003d false;\n    }\n    p \u003d progress \u003e 0.9 ? (progress - 0.9) : (progress + 0.1);\n    scope.damage[id].gotoAndStop(Math.round((scope.damage[id].textures.length - 1) * p));\n\n    scope.damage[id].visible \u003d true;\n    scope.damage[id].position \u003d hexCoordinate(frameDamage.damage[i].row, frameDamage.damage[i].column);\n  }\n\n  scope.cannonballs.forEach(function(ball) {\n    ball.visible \u003d false;\n  });\n\n  scope.boats.forEach(function(boat) {\n    boat.cannonSprite.visible \u003d false;\n  });\n\n  frame.cannonballs.forEach(function(ball) {\n    var distance \u003d ball.initialRemainingTurns;\n\n    if (!scope.cannonballs[ball.id]) {\n      scope.cannonballs[ball.id] \u003d new PIXI.Sprite.fromFrame(\u0027cannonball\u0027);\n      scope.cannonballs[ball.id].anchor.x \u003d scope.cannonballs[ball.id].anchor.y \u003d 0.5;\n      scope.mapContainer.addChild(scope.cannonballs[ball.id]);\n    }\n\n    var p \u003d (ball.initialRemainingTurns - ball.remainingTurns + progress) / (ball.initialRemainingTurns + 1);\n    scope.cannonballs[ball.id].visible \u003d p \u003c 1;\n    scope.cannonballs[ball.id].scale.x \u003d scope.cannonballs[ball.id].scale.y \u003d (1 + ball.initialRemainingTurns / 6) * (1 - 3 * (p - 0.5) * (p - 0.5));\n    scope.cannonballs[ball.id].position \u003d lerpPosition(hexCoordinate(ball.srcRow, ball.srcCol), hexCoordinate(ball.row, ball.column), p);\n\n    if (ball.initialRemainingTurns \u003d\u003d\u003d ball.remainingTurns) {\n      scope.boats[ball.srcBoat].cannonSprite.visible \u003d true;\n      scope.boats[ball.srcBoat].cannonSprite.gotoAndStop(Math.round((scope.boats[ball.srcBoat].cannonSprite.textures.length - 1) * progress));\n    } else {\n      scope.boats[ball.srcBoat].cannonSprite.visible \u003d false;\n    }\n  });\n\n  var next \u003d [];\n  for (i \u003d 0; i \u003c scope.updatables.length; ++i) {\n    if (!scope.updatables[i].update(frame.frameNumber, progress, frame, scope)) {\n      next.push(scope.updatables[i]);\n    }\n  }\n  scope.updatables \u003d next;\n\n  scope.lastUpdatedFrame \u003d frameNumber;\n};\n\nDrawer.prototype.initEndScene \u003d function(scope, failure) {\n  scope.endSceneViewed \u003d false;\n};\n\nDrawer.prototype.destroyEndScene \u003d function(scope) {\n  var end \u003d scope.end;\n  end.titleRanking.visible \u003d false;\n  end.visible \u003d false;\n};\n\nDrawer.prototype.renderEndScene \u003d function(scope, step, failure) {\n  var i;\n  var endOfEnd \u003d 10000;\n  if (scope.endTime \u003d\u003d\u003d 0) {\n    this.initEndScene(scope, failure);\n  }\n\n  if (scope.end) {\n    var end \u003d scope.end;\n    end.visible \u003d true;\n\n    var backS \u003d 500;\n    var backD \u003d 400;\n    var backP \u003d unlerp(backS, backS + backD, scope.endTime);\n    end.backgroundRanking.alpha \u003d backP * 1;\n\n    var logoS \u003d 900;\n    var logoD \u003d 600;\n    var logoP \u003d unlerp(logoS, logoS + logoD, scope.endTime);\n    end.titleRanking.scale.x \u003d end.titleRanking.scale.y \u003d 0.001 + lerp(10, 1, logoP);\n    end.titleRanking.visible \u003d !!logoP;\n\n    var rankS \u003d 1500;\n    var rankD \u003d 300;\n    for (i \u003d 0; i \u003c scope.finishers.length; ++i) {\n      var p \u003d unlerp(rankS + rankD * i, rankS + rankD * i + rankD, scope.endTime);\n      scope.finishers[i].alpha \u003d p;\n    }\n\n    var shakeForceMax \u003d 10;\n    var strength \u003d 0.4;\n    var shakeTime \u003d 0, shakeP \u003d 0;\n\n    if (logoP \u003e\u003d 1) {\n      shakeTime \u003d 400;\n      shakeP \u003d unlerp(logoS + logoD, logoS + logoD + shakeTime, scope.endTime);\n    }\n\n    var shakeForce \u003d shakeP ? lerp(shakeForceMax, 0, unlerp(1 - strength, 1, shakeP)) : 0;\n    var shakeX \u003d shakeForce * Math.cos(2 * scope.endTime);\n    var shakeY \u003d shakeForce * Math.sin(scope.endTime);\n\n    scope.container.x \u003d shakeX;\n    scope.container.y \u003d shakeY;\n    end.backgroundRanking.x \u003d shakeX - 20;\n    end.backgroundRanking.y \u003d shakeY - 20;\n\n    scope.endTime +\u003d step;\n\n    if (scope.endTime \u003e\u003d endOfEnd \u0026\u0026 !scope.endSceneViewed) {\n      if (this.endCallback) {\n        this.endCallback();\n      }\n      scope.endSceneViewed \u003d true;\n    }\n  }\n};\n\nDrawer.prototype.renderRenderables \u003d function(step, scope, frame) {\n  var next \u003d [];\n  for (var i \u003d 0; i \u003c scope.renderables.length; ++i) {\n    var updatable \u003d scope.renderables[i];\n    var remove \u003d updatable.render(step, scope, frame);\n    if (!remove) {\n      next.push(updatable);\n    }\n  }\n  scope.renderables \u003d next;\n};\n\n/** Mandatory */\nDrawer.prototype.renderScene \u003d function(scope, question, frames, frameNumber, progress, speed, reason, step) {\n  /** ************************************* */\n  /*        ASYNCHRONOUS                    */\n  /** ************************************* */\n  step \u003d Math.min(80, step);\n  var stepFactor \u003d Math.pow(0.9, step);\n\n  var endFrame \u003d !scope.debugMode \u0026\u0026 (frameNumber \u003d\u003d frames.length - 1 \u0026\u0026 progress \u003d\u003d 1);\n\n  if (endFrame) {\n    this.renderEndScene(scope, step, (reason !\u003d \"Win\"));\n  } else {\n    if (scope.endTime \u003e 0) {\n      this.destroyEndScene(scope);\n    }\n    scope.endTime \u003d 0;\n  }\n\n  for (i \u003d 0; i \u003c 2; i++) {\n    for (j \u003d 0; j \u003c scope.initData.boatsPerPlayer; j++) {\n      var gBoat \u003d scope.players[i].boats[j];\n\n      gBoat.prevBoatSprite.position \u003d gBoat.prevTargetPosition;\n      gBoat.prevBoatSprite.rotation \u003d gBoat.prevTargetRotation;\n\n      if (gBoat.position.x \u003d\u003d\u003d 0 || squareDistance(gBoat.position, gBoat.targetPosition) \u003e 200 * 200) {\n        gBoat.position \u003d gBoat.targetPosition;\n        gBoat.rotation \u003d gBoat.targetRotation;\n      } else {\n        gBoat.position \u003d lerpPosition(gBoat.position, gBoat.targetPosition, stepFactor);\n        gBoat.rotation \u003d lerpAngle(gBoat.rotation, gBoat.targetRotation, stepFactor);\n      }\n    }\n  }\n\n\n  this.renderRenderables(step, scope, frames[frameNumber]);\n\n\n  return true;\n};\n\n/**\n * Optional\n */\nDrawer.prototype.getFrameSpeed \u003d function(frameNumber, playerSpeed) {\n  //Will be multiplied by current playerSpeed\n  return 1;\n};\n\n\nDrawer.prototype.canSwapPlayers \u003d function() {\n  return false;\n};\n\nDrawer.FX \u003d {\n  MINE: [\u0027mine_idle_1\u0027, \u0027mine_idle_1\u0027, \u0027mine_idle_2\u0027, \u0027mine_idle_3\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_4\u0027, \u0027mine_idle_5\u0027, \u0027mine_idle_6\u0027, \u0027mine_idle_7\u0027],\n  SUPPLIES: [\u0027supplies_idle_1\u0027, \u0027supplies_idle_1\u0027, \u0027supplies_idle_2\u0027, \u0027supplies_idle_3\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_4\u0027, \u0027supplies_idle_5\u0027, \u0027supplies_idle_6\u0027, \u0027supplies_idle_7\u0027],\n  PLOUF: [\u0027plouf_anim_1\u0027, \u0027plouf_anim_2\u0027, \u0027plouf_anim_3\u0027, \u0027plouf_anim_4\u0027, \u0027plouf_anim_4\u0027, \u0027plouf_anim_5\u0027, \u0027plouf_anim_6\u0027],\n  BOOM: [\u0027boom_anim_1\u0027, \u0027boom_anim_2\u0027, \u0027boom_anim_3\u0027, \u0027boom_anim_4\u0027, \u0027boom_anim_5\u0027, \u0027boom_anim_6\u0027, \u0027boom_anim_7\u0027, \u0027boom_anim_8\u0027, \u0027boom_anim_9\u0027, \u0027boom_anim_10\u0027, \u0027boom_anim_11\u0027, \u0027boom_anim_12\u0027, \u0027boom_anim_13\u0027],\n  CANNON_SHOOT: [\u0027cannon_shoot_anim_1\u0027, \u0027cannon_shoot_anim_2\u0027, \u0027cannon_shoot_anim_3\u0027, \u0027cannon_shoot_anim_4\u0027, \u0027cannon_shoot_anim_5\u0027, \u0027cannon_shoot_anim_6\u0027, \u0027cannon_shoot_anim_7\u0027, \u0027cannon_shoot_anim_8\u0027],\n  BOAT_WAVE: [\u0027wave_boat_anim_1\u0027, \u0027wave_boat_anim_2\u0027, \u0027wave_boat_anim_3\u0027, \u0027wave_boat_anim_4\u0027, \u0027wave_boat_anim_5\u0027],\n  BOAT_BURST: [\u0027boat_burst_1\u0027, \u0027boat_burst_2\u0027, \u0027boat_burst_3\u0027, \u0027boat_burst_4\u0027, \u0027boat_burst_5\u0027, \u0027boat_burst_6\u0027, \u0027boat_burst_7\u0027, \u0027boat_burst_8\u0027],\n  BOATS: [\n    [\u0027boat_orange_anim_1\u0027, \u0027boat_orange_anim_2\u0027, \u0027boat_orange_anim_3\u0027, \u0027boat_orange_anim_4\u0027, \u0027boat_orange_anim_5\u0027, \u0027boat_orange_anim_6\u0027, \u0027boat_orange_anim_7\u0027, \u0027boat_orange_anim_8\u0027, \u0027boat_orange_anim_9\u0027, \u0027boat_orange_anim_10\u0027, \u0027boat_orange_anim_11\u0027, \u0027boat_orange_anim_12\u0027, \u0027boat_orange_anim_13\u0027, \u0027boat_orange_anim_14\u0027, \u0027boat_orange_anim_15\u0027, \u0027boat_orange_anim_16\u0027, \u0027boat_orange_anim_17\u0027, \u0027boat_orange_anim_18\u0027, \u0027boat_orange_anim_19\u0027, \u0027boat_orange_anim_20\u0027],\n    [\u0027boat_red_anim_1\u0027, \u0027boat_red_anim_2\u0027, \u0027boat_red_anim_3\u0027, \u0027boat_red_anim_4\u0027, \u0027boat_red_anim_5\u0027, \u0027boat_red_anim_6\u0027, \u0027boat_red_anim_7\u0027, \u0027boat_red_anim_8\u0027, \u0027boat_red_anim_9\u0027, \u0027boat_red_anim_10\u0027, \u0027boat_red_anim_11\u0027, \u0027boat_red_anim_12\u0027, \u0027boat_red_anim_13\u0027, \u0027boat_red_anim_14\u0027, \u0027boat_red_anim_15\u0027, \u0027boat_red_anim_16\u0027, \u0027boat_red_anim_17\u0027, \u0027boat_red_anim_18\u0027, \u0027boat_red_anim_19\u0027, \u0027boat_red_anim_20\u0027]\n  ],\n  SAILS: [\n    [\n      [\u0027sail_orange_codingame_anim_1\u0027, \u0027sail_orange_codingame_anim_2\u0027, \u0027sail_orange_codingame_anim_3\u0027, \u0027sail_orange_codingame_anim_4\u0027, \u0027sail_orange_codingame_anim_5\u0027, \u0027sail_orange_codingame_anim_6\u0027, \u0027sail_orange_codingame_anim_7\u0027, \u0027sail_orange_codingame_anim_8\u0027, \u0027sail_orange_codingame_anim_9\u0027, \u0027sail_orange_codingame_anim_10\u0027, \u0027sail_orange_codingame_anim_11\u0027, \u0027sail_orange_codingame_anim_12\u0027, \u0027sail_orange_codingame_anim_13\u0027, \u0027sail_orange_codingame_anim_14\u0027, \u0027sail_orange_codingame_anim_15\u0027, \u0027sail_orange_codingame_anim_16\u0027, \u0027sail_orange_codingame_anim_17\u0027, \u0027sail_orange_codingame_anim_18\u0027, \u0027sail_orange_codingame_anim_19\u0027, \u0027sail_orange_codingame_anim_20\u0027],\n      [\u0027sail_orange_sabers_anim_1\u0027, \u0027sail_orange_sabers_anim_2\u0027, \u0027sail_orange_sabers_anim_3\u0027, \u0027sail_orange_sabers_anim_4\u0027, \u0027sail_orange_sabers_anim_5\u0027, \u0027sail_orange_sabers_anim_6\u0027, \u0027sail_orange_sabers_anim_7\u0027, \u0027sail_orange_sabers_anim_8\u0027, \u0027sail_orange_sabers_anim_9\u0027, \u0027sail_orange_sabers_anim_10\u0027, \u0027sail_orange_sabers_anim_11\u0027, \u0027sail_orange_sabers_anim_12\u0027, \u0027sail_orange_sabers_anim_13\u0027, \u0027sail_orange_sabers_anim_14\u0027, \u0027sail_orange_sabers_anim_15\u0027, \u0027sail_orange_sabers_anim_16\u0027, \u0027sail_orange_sabers_anim_17\u0027, \u0027sail_orange_sabers_anim_18\u0027, \u0027sail_orange_sabers_anim_19\u0027, \u0027sail_orange_sabers_anim_20\u0027],\n      [\u0027sail_orange_skull_anim_1\u0027, \u0027sail_orange_skull_anim_2\u0027, \u0027sail_orange_skull_anim_3\u0027, \u0027sail_orange_skull_anim_4\u0027, \u0027sail_orange_skull_anim_5\u0027, \u0027sail_orange_skull_anim_6\u0027, \u0027sail_orange_skull_anim_7\u0027, \u0027sail_orange_skull_anim_8\u0027, \u0027sail_orange_skull_anim_9\u0027, \u0027sail_orange_skull_anim_10\u0027, \u0027sail_orange_skull_anim_11\u0027, \u0027sail_orange_skull_anim_12\u0027, \u0027sail_orange_skull_anim_13\u0027, \u0027sail_orange_skull_anim_14\u0027, \u0027sail_orange_skull_anim_15\u0027, \u0027sail_orange_skull_anim_16\u0027, \u0027sail_orange_skull_anim_17\u0027, \u0027sail_orange_skull_anim_18\u0027, \u0027sail_orange_skull_anim_19\u0027, \u0027sail_orange_skull_anim_20\u0027]\n    ],\n    [\n      [\u0027sail_red_codingame_anim_1\u0027, \u0027sail_red_codingame_anim_2\u0027, \u0027sail_red_codingame_anim_3\u0027, \u0027sail_red_codingame_anim_4\u0027, \u0027sail_red_codingame_anim_5\u0027, \u0027sail_red_codingame_anim_6\u0027, \u0027sail_red_codingame_anim_7\u0027, \u0027sail_red_codingame_anim_8\u0027, \u0027sail_red_codingame_anim_9\u0027, \u0027sail_red_codingame_anim_10\u0027, \u0027sail_red_codingame_anim_11\u0027, \u0027sail_red_codingame_anim_12\u0027, \u0027sail_red_codingame_anim_13\u0027, \u0027sail_red_codingame_anim_14\u0027, \u0027sail_red_codingame_anim_15\u0027, \u0027sail_red_codingame_anim_16\u0027, \u0027sail_red_codingame_anim_17\u0027, \u0027sail_red_codingame_anim_18\u0027, \u0027sail_red_codingame_anim_19\u0027, \u0027sail_red_codingame_anim_20\u0027],\n      [\u0027sail_red_sabers_anim_1\u0027, \u0027sail_red_sabers_anim_2\u0027, \u0027sail_red_sabers_anim_3\u0027, \u0027sail_red_sabers_anim_4\u0027, \u0027sail_red_sabers_anim_5\u0027, \u0027sail_red_sabers_anim_6\u0027, \u0027sail_red_sabers_anim_7\u0027, \u0027sail_red_sabers_anim_8\u0027, \u0027sail_red_sabers_anim_9\u0027, \u0027sail_red_sabers_anim_10\u0027, \u0027sail_red_sabers_anim_11\u0027, \u0027sail_red_sabers_anim_12\u0027, \u0027sail_red_sabers_anim_13\u0027, \u0027sail_red_sabers_anim_14\u0027, \u0027sail_red_sabers_anim_15\u0027, \u0027sail_red_sabers_anim_16\u0027, \u0027sail_red_sabers_anim_17\u0027, \u0027sail_red_sabers_anim_18\u0027, \u0027sail_red_sabers_anim_19\u0027, \u0027sail_red_sabers_anim_20\u0027],\n      [\u0027sail_red_skull_anim_1\u0027, \u0027sail_red_skull_anim_2\u0027, \u0027sail_red_skull_anim_3\u0027, \u0027sail_red_skull_anim_4\u0027, \u0027sail_red_skull_anim_5\u0027, \u0027sail_red_skull_anim_6\u0027, \u0027sail_red_skull_anim_7\u0027, \u0027sail_red_skull_anim_8\u0027, \u0027sail_red_skull_anim_9\u0027, \u0027sail_red_skull_anim_10\u0027, \u0027sail_red_skull_anim_11\u0027, \u0027sail_red_skull_anim_12\u0027, \u0027sail_red_skull_anim_13\u0027, \u0027sail_red_skull_anim_14\u0027, \u0027sail_red_skull_anim_15\u0027, \u0027sail_red_skull_anim_16\u0027, \u0027sail_red_skull_anim_17\u0027, \u0027sail_red_skull_anim_18\u0027, \u0027sail_red_skull_anim_19\u0027, \u0027sail_red_skull_anim_20\u0027]\n    ]\n  ],\n  WAVE: [\u0027anim_wave_1\u0027, \u0027anim_wave_2\u0027, \u0027anim_wave_3\u0027, \u0027anim_wave_4\u0027, \u0027anim_wave_5\u0027, \u0027anim_wave_6\u0027, \u0027anim_wave_7\u0027, \u0027anim_wave_8\u0027, \u0027anim_wave_9\u0027, \u0027anim_wave_10\u0027, \u0027anim_wave_11\u0027, \u0027anim_wave_12\u0027, \u0027anim_wave_13\u0027, \u0027anim_wave_14\u0027, \u0027anim_wave_15\u0027, \u0027anim_wave_16\u0027, \u0027anim_wave_17\u0027, \u0027anim_wave_18\u0027, \u0027anim_wave_19\u0027, \u0027anim_wave_20\u0027, \u0027anim_wave_21\u0027, \u0027anim_wave_22\u0027, \u0027anim_wave_23\u0027, \u0027anim_wave_24\u0027, \u0027anim_wave_25\u0027, \u0027anim_wave_26\u0027, \u0027anim_wave_27\u0027, \u0027anim_wave_28\u0027, \u0027anim_wave_29\u0027, \u0027anim_wave_30\u0027, \u0027anim_wave_31\u0027, \u0027anim_wave_32\u0027, \u0027anim_wave_33\u0027, \u0027anim_wave_34\u0027, \u0027anim_wave_35\u0027, \u0027anim_wave_36\u0027, \u0027anim_wave_37\u0027, \u0027anim_wave_38\u0027, \u0027anim_wave_39\u0027, \u0027anim_wave_40\u0027, \u0027anim_wave_41\u0027, \u0027anim_wave_42\u0027, \u0027anim_wave_43\u0027, \u0027anim_wave_44\u0027]\n};\n\n/*\n * #########################################################\n * ####                                                 ####\n * ####         EDIT TO HERE                            ####\n * ####                                                 ####\n * #########################################################\n */\n\nDrawer.RenderTimeout \u003d location.hostname \u003d\u003d\u003d \u0027localhost\u0027 ? 500000 : 20000;\n\nDrawer.prototype.getCurrentState \u003d function() {\n  if (this.loaded \u003e\u003d 1) {\n    if (this.currentFrame \u003e\u003d 0) {\n      return \u0027game\u0027;\n    } else {\n      return \u0027startScreen\u0027;\n    }\n  } else {\n    return \u0027loading\u0027;\n  }\n};\n\nDrawer.prototype.enableAsyncRendering \u003d function(enabled) {\n  this.asyncRendering \u003d enabled;\n  this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n};\n\nDrawer.prototype.purge \u003d function() {\n  this.scope \u003d {};\n  this.changed \u003d true;\n\n  this.container.interactiveChildren \u003d false;\n  this.container.destroy({\n    texture: false,\n    children: true\n  });\n  this.container \u003d null;\n  this.container \u003d new PIXI.Container();\n};\n\nDrawer.prototype.reinitScene \u003d function() {\n  if (this.loaded \u003e\u003d 1) {\n\n    this.destroyScene(this.scope);\n    this.purge();\n    this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n    this.preconstructScene(this.initData, this.scope, this.container, this.initWidth, this.initHeight);\n    this.initScene(this.scope, this.container, this.frames);\n    this.updateScene(this.scope, this.question, this.frames, this.currentFrame, this.progress, this.speed, this.reasons[this.currentFrame]);\n    this.changed \u003d true;\n  }\n\n};\n\nDrawer.prototype.reinitDefaultScene \u003d function() {\n  if (this.loaded \u003e\u003d 1) {\n    this.intro \u003d true;\n    this.purge();\n    this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n    this.initDefaultScene(this.scope, this.container, this.initWidth, this.initHeight);\n    this.changed \u003d true;\n  }\n};\n\nDrawer.prototype.reinitLoadingScene \u003d function() {\n  if (this.loaded \u003c 1) {\n    this.purge();\n    this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n    this.initPreload(this.scope, this.container, this.loaded, this.initWidth, this.initHeight);\n  }\n};\n\nDrawer.prototype.reinit \u003d function(force) {\n  if (this.loaded \u003e\u003d 1) {\n    if (this.currentFrame \u003e\u003d 0 \u0026\u0026 !this.intro) {\n      this.reinitScene();\n    } else {\n      if (!this.intro || force)\n        this.reinitDefaultScene();\n    }\n  } else {\n    this.reinitLoadingScene();\n  }\n};\n\nDrawer.prototype.animate \u003d function(time) {\n  if (this.destroyed) {\n    return;\n  }\n\n  if (!this.lastRenderTime)\n    this.lastRenderTime \u003d time;\n  var step \u003d time - this.lastRenderTime;\n  if (this.asynchronousStep) {\n    step \u003d this.asynchronousStep;\n  }\n  if (this.onBeforeRender) {\n    this.onBeforeRender();\n  }\n\n  //this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n  if (!this.loading) {\n    if (this.loaded \u003c 1) {\n      this.changed |\u003d this.renderPreloadScene(this.scope, step);\n    } else if (this.changed || (this.asyncRendering \u0026\u0026 this.asyncRenderingTime \u003e 0)) {\n      if (this.currentFrame \u003c 0) {\n        this.changed |\u003d this.renderDefaultScene(this.scope, step);\n      } else if (this.intro) {\n        this.changed \u003d true;\n        if (this.endDefaultScene(this.scope, step)) {\n          this.intro \u003d false;\n          this.reinit(true);\n        }\n      } else {\n        this.changed |\u003d this.renderScene(this.scope, this.question, this.frames, this.currentFrame, this.progress, this.speed, this.reasons[this.currentFrame], step);\n      }\n    }\n    if (this.changed) {\n      this.renderer.render(this.container);\n      this.changed \u003d false;\n    } else {\n      //    if (this.renderer.plugins \u0026\u0026 this.renderer.plugins.interaction)\n      //      this.renderer.plugins.interaction.update();\n    }\n  }\n  if (this.onAfterRender) {\n    this.onAfterRender();\n  }\n  var self \u003d this;\n  this.lastRenderTime \u003d time;\n  if (!this.destroyed)\n    requestAnimationFrame(this.animate.bind(this));\n\n  this.asyncRenderingTime -\u003d step;\n};\n\nDrawer.prototype.handleInitFrame \u003d function(frame) {\n  this.question \u003d frame[1];\n  var header \u003d frame[0].split(\" \");\n  this.currentFrame \u003d header[1] | 0;\n  this.progress \u003d 1;\n  if (header.length \u003e 2)\n    this.reasons[0] \u003d header[2];\n  frame \u003d frame.slice(2);\n  var startLine \u003d this.getInitLineCount(frame);\n  this.initView \u003d frame.slice(0, startLine);\n  this.initData \u003d this.parseInitData(this.question, this.initView, this.playerCount);\n  return frame.slice(startLine, -1);\n};\n\nDrawer.prototype._initFrames \u003d function(playerCount, frames) {\n  var firstFrame \u003d frames[0];\n  if (firstFrame[0] \u003d\u003d \u0027-1\u0027) {\n    this.currentFrame \u003d -1;\n    return;\n  }\n  this._frames \u003d frames;\n  this.playerCount \u003d playerCount;\n  this.reasons \u003d [];\n  this.frames \u003d [];\n  this.frames.push(this.parseFrame(this.handleInitFrame(firstFrame), true, this.frames, this.initData));\n  for (var i \u003d 1; i \u003c this._frames.length; ++i) {\n    if (this._frames[i] \u003d\u003d\u003d null) {\n      this._frames[i] \u003d this._frames[i - 2];\n    }\n\n    var temp \u003d this._frames[i];\n    var header \u003d temp[0].split(\" \");\n    if (header.length \u003e 2) {\n      this.reasons[i] \u003d header[2];\n    }\n    this.frames.push(this.parseFrame(temp.slice(1, -1), header[0] \u003d\u003d \u0027KEY_FRAME\u0027, this.frames, this.initData));\n  }\n};\n\nDrawer.prototype.isTurnBasedGame \u003d function() {\n  return false;\n};\n\nDrawer.prototype.initFrames \u003d function(frames, agents) {\n  if (this.playerInfo) {\n    this.playerInfo.forEach(function(playerInfo) {\n      if (playerInfo.avatar) {\n        playerInfo.avatar.destroy(true);\n      }\n    });\n  }\n\n  var drawer \u003d this;\n\n  var loader \u003d new PIXI.loaders.Loader(window.location.origin);\n  this.playerInfo \u003d agents.map(function(agent, index) {\n    var agentData \u003d {\n      name: agent.name || \u0027Anonymous\u0027,\n      color: drawer.parseColor(agent.color),\n      number: index,\n      index: agent.index,\n      type: agent.type,\n      isMe: agent.type \u003d\u003d\u003d \u0027CODINGAMER\u0027 \u0026\u0026 agent.typeData.me,\n      avatar: null\n    };\n\n    loader.add(\u0027avatar\u0027 + index, agent.avatar, {loadType: 2}, function(event) {\n      agentData.avatar \u003d event.texture;\n    });\n    return agentData;\n  });\n  this.loading \u003d true;\n  loader.on(\u0027complete\u0027, function(loader) {\n    drawer._initFrames(agents.length, frames);\n    drawer.loading \u003d false;\n    drawer.reinit(false);\n  });\n  loader.on(\u0027error\u0027, function(e) {\n    console.log(e);\n  });\n  loader.load();\n};\n/*\nDrawer.prototype.initFrames \u003d function(playerCount, frames, playerMapper, playerNames) {\n  if (playerNames)\n    this.playerNames \u003d playerNames;\n  if (playerMapper)\n    this.playerMapper \u003d playerMapper;\n  this._initFrames(playerCount, frames);\n  this.reinit(false);\n};\n*/\nDrawer.prototype.update \u003d function(currentFrame, progress, speed) {\n  if (this.currentFrame \u003e\u003d 0) {\n    this.asyncRenderingTime \u003d Drawer.RenderTimeout;\n    this.changed \u003d true;\n    this.speed \u003d speed;\n    this.currentFrame \u003d currentFrame;\n    this.progress \u003d progress;\n    if (this.loaded \u003e\u003d 1 \u0026\u0026 !this.intro) {\n      this.updateScene(this.scope, this.question, this.frames, currentFrame, progress, this.speed, this.reasons[this.currentFrame]);\n    }\n  }\n};\n\nDrawer.prototype.parseColor \u003d function(color) {\n  if (Array.isArray(color)) {\n    var i;\n    var parsedColor \u003d [];\n    for (i \u003d 0; i \u003c color.length; ++i) {\n      parsedColor.push(this.parseColor(color[i]));\n    }\n    return parsedColor;\n  } else {\n    if (color.toUpperCase() \u003d\u003d \u0027#ffae16\u0027.toUpperCase()) {\n      color \u003d \u0027#ff8f16\u0027;\n    }\n    return parseInt(color.substring(1), 16);\n  }\n};\n\nDrawer.prototype.init \u003d function(canvas, width, height, colors, oversampling, endCallback, location) {\n  PIXI \u003d Drawer.PIXI || PIXI;\n  this.oversampling \u003d oversampling || 1;\n  this.canvas \u003d $(canvas);\n  if (colors)\n    this.colors \u003d this.parseColor(colors);\n  if (!this.debugModeSetByUser \u0026\u0026 location \u003d\u003d\u003d \u0027ide\u0027) {\n    this.debugMode \u003d true;\n  }\n  this.asyncRendering \u003d true;\n  this.asyncRenderingTime \u003d 0;\n  this.destroyed \u003d false;\n  this.asynchronousStep \u003d null;\n  var self \u003d this;\n  var key;\n  this.initWidth \u003d width | 0;\n  this.initHeight \u003d height | 0;\n  this.endCallback \u003d endCallback || this.endCallback;\n\n  if (!this.alreadyLoaded) {\n    this.toDestroy \u003d [];\n    this.alreadyLoaded \u003d true;\n    // Initialisation\n    this.question \u003d null;\n    this.scope \u003d null;\n    this.currentFrame \u003d -1;\n    this.loaded \u003d 0;\n    // Engine instanciation\n    this.container \u003d new PIXI.Container();\n    var resources \u003d this.getResources();\n    this.renderer \u003d this.createRenderer(this.initWidth, this.initHeight, canvas);\n    var loader \u003d new PIXI.loaders.Loader(resources.baseUrl);\n    for ( key in resources.images) {\n      loader.add(key, resources.images[key]);\n    }\n    var i;\n    for (i \u003d 0; i \u003c resources.sprites.length; ++i) {\n      loader.add(resources.sprites[i]);\n    }\n    for (i \u003d 0; i \u003c resources.fonts.length; ++i) {\n      loader.add(resources.fonts[i]);\n    }\n    for ( key in resources.spines) {\n      loader.add(key, resources.spines[key]);\n    }\n    for (i \u003d 0; i \u003c resources.others.length; ++i) {\n      loader.add(resources.others[i]);\n    }\n\n    self.scope \u003d {};\n    loader.on(\u0027start\u0027, function(loader, resource) {\n      requestAnimationFrame(self.animate.bind(self));\n      self.initPreload(self.scope, self.container, self.loaded \u003d 0, self.initWidth, self.initHeight);\n    });\n    loader.on(\u0027progress\u0027, function(loader, resource) {\n      if (loader.progress \u003c 100) {\n        self.preload(self.scope, self.container, self.loaded \u003d loader.progress / 100, self.initWidth, self.initHeight, resource);\n      }\n    });\n\n    loader.on(\u0027complete\u0027, function() {\n      var key;\n      for (key in resources.images) {\n        if (resources.images.hasOwnProperty(key)) {\n          PIXI.Texture.addTextureToCache(loader.resources[key].texture, key);\n        }\n      }\n      for (key in resources.spines) {\n        if (resources.spines.hasOwnProperty(key)) {\n          PIXI.AnimCache[key] \u003d PIXI.AnimCache[resources.baseUrl + resources.spines[key]];\n        }\n      }\n      self.loaded \u003d 1;\n      self.reinit(true);\n      self.changed \u003d true;\n    });\n    loader.on(\u0027error\u0027, function(e) {\n      console.warn(e);\n    });\n    loader.load();\n  } else {\n    this.changed \u003d true;\n    this.renderer.resize(this.initWidth, this.initHeight);\n    this.reinit(true);\n  }\n};\nDrawer.prototype.createRenderer \u003d function(width, height, canvas) {\n  return PIXI.autoDetectRenderer(width, height, {\n    view: canvas,\n    preserveDrawingBuffer: false\n  });\n};\n\nDrawer.prototype.isReady \u003d function() {\n  return this.loaded \u003e\u003d 1;\n};\n\n\nDrawer.DEMO \u003d {\n  playerCount: 2,\n  playerMapper: [0, 1, 2, 3, 5, 6, 7],\n  playerNames: [\"Player 1\", \"Player 2\"],\n  avatars: [null, null],\n  playerTypes: [\"DEFAULT\", \"DEFAULT\"],\n  frames: [[\"KEY_FRAME 0\",\"CodersOfTheCaribbean\",\"2\",\"23 21 3 5\",\"0\",\"0 2 3 1 100 0 WAIT 1 3 3 2  ;\",\"2 6 12 4 100 0 WAIT 7 11 5 12  ;\",\"4 4 21 1 100 0 WAIT 3 21 5 20  ;\",\"1\",\"1 18 3 5 100 0 WAIT 19 3 17 2  ;\",\"3 14 12 2 100 0 WAIT 13 11 15 12  ;\",\"5 16 21 5 100 0 WAIT 17 21 15 20  ;\",\"0\",\"10\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"14 2 8\",\"19\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"30 16 12 19\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"35 14 11 18\",\"34 6 11 18\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 1\",\"\"],[\"KEY_FRAME 2\",\"0\",\"0 2 3 1 99 0 FIRE 1 3 3 2  ;\",\"2 6 12 5 99 0 PORT 7 12 5 11  ;\",\"4 4 21 0 99 0 STARBOARD 4 22 4 20  ;\",\"1\",\"1 18 3 0 99 0 PORT 18 4 18 2  ;\",\"3 14 12 3 100 0 PORT 14 11 14 13  ;\",\"5 16 21 4 99 0 STARBOARD 17 20 15 21  ;\",\"1\",\"36 2 8 1 3 2 2 0\",\"10\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"14 2 8\",\"18\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"30 16 12 19\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"34 6 11 18\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 3\",\"\"],[\"KEY_FRAME 4\",\"0\",\"0 2 3 0 98 0 STARBOARD 2 4 2 2  ;\",\"2 6 12 0 100 0 PORT 6 13 6 11  ;\",\"4 4 21 5 98 0 STARBOARD 5 21 3 20  ;\",\"1\",\"1 18 3 1 98 0 PORT 17 3 19 2  ;\",\"3 14 12 4 99 0 PORT 15 11 13 12  ;\",\"5 16 21 3 98 0 STARBOARD 16 20 16 22  ;\",\"1\",\"36 2 8 1 3 2 1 0\",\"10\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"14 2 8\",\"17\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"30 16 12 19\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 5\",\"\"],[\"KEY_FRAME 6\",\"0\",\"0 2 4 0 97 1 FASTER 2 5 2 3  ;\",\"2 6 13 0 99 1 FASTER 6 14 6 12  ;\",\"4 4 21 4 97 0 STARBOARD 5 20 3 21  ;\",\"1\",\"1 17 3 1 97 1 FASTER 16 4 18 3  ;\",\"3 15 11 4 98 1 FASTER 16 11 14 12  ;\",\"5 16 20 3 97 1 FASTER 16 19 16 21  ;\",\"1\",\"36 2 8 1 3 2 0 0\",\"9\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"17\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"30 16 12 19\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"1\",\"2 8 0 0\",\"\"],[\"INTERMEDIATE_FRAME 7\",\"\"],[\"KEY_FRAME 8\",\"0\",\"0 2 5 0 96 1 FIRE 2 6 2 4  ;\",\"2 6 14 0 98 1 WAIT 6 15 6 13  ;\",\"4 5 20 4 96 1 FASTER 6 20 4 21  ;\",\"1\",\"1 16 4 1 96 1 WAIT 15 4 17 3  ;\",\"3 15 11 4 97 0 SLOWER 16 11 14 12  ;\",\"5 16 19 3 96 1 WAIT 16 18 16 20  ;\",\"1\",\"37 7 6 2 5 2 2 0\",\"9\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"17\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"30 16 12 19\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 9\",\"\"],[\"KEY_FRAME 10\",\"0\",\"0 2 6 0 95 1 WAIT 2 7 2 5  ;\",\"2 6 15 0 97 1 WAIT 6 16 6 14  ;\",\"4 6 20 4 95 1 WAIT 7 19 5 20  ;\",\"1\",\"1 15 4 0 95 1 STARBOARD 15 5 15 3  ;\",\"3 15 11 5 100 0 PORT 16 12 14 11  ;\",\"5 16 18 4 95 1 PORT 17 17 15 18  ;\",\"1\",\"37 7 6 2 5 2 1 0\",\"9\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"12 7 6\",\"15 18 8\",\"16\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"28 15 6 17\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"33 18 17 17\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 11\",\"\"],[\"KEY_FRAME 12\",\"0\",\"0 2 7 0 94 1 WAIT 2 8 2 6  ;\",\"2 6 16 0 96 1 WAIT 6 17 6 15  ;\",\"4 7 19 5 94 1 PORT 8 20 6 19  ;\",\"1\",\"1 15 5 0 100 1 WAIT 15 6 15 4  ;\",\"3 15 11 4 99 0 STARBOARD 16 11 14 12  ;\",\"5 17 17 4 100 1 WAIT 18 17 16 18  ;\",\"1\",\"37 7 6 2 5 2 0 0\",\"8\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"15 18 8\",\"14\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"20 9 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"25 19 16 16\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"1\",\"7 6 0 0\",\"\"],[\"INTERMEDIATE_FRAME 13\",\"\"],[\"KEY_FRAME 14\",\"0\",\"0 2 8 0 93 1 FIRE 2 9 2 7  ;\",\"2 6 17 5 95 1 STARBOARD 7 17 5 16  ;\",\"4 8 20 5 100 1 WAIT 9 20 7 19  ;\",\"1\",\"1 15 6 0 99 1 WAIT 15 7 15 5  ;\",\"3 15 11 3 98 0 STARBOARD 15 10 15 12  ;\",\"5 18 17 4 100 1 WAIT 19 16 17 17  ;\",\"1\",\"38 7 13 2 8 3 3 0\",\"8\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"15 18 8\",\"12\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 15\",\"\"],[\"KEY_FRAME 16\",\"0\",\"0 2 9 0 92 1 WAIT 2 10 2 8  ;\",\"2 7 17 5 94 1 WAIT 8 18 6 17  ;\",\"4 9 20 5 99 1 WAIT 10 21 8 20  ;\",\"1\",\"1 15 7 0 98 1 WAIT 15 8 15 6  ;\",\"3 15 10 3 97 1 FASTER 15 9 15 11  ;\",\"5 19 16 3 99 1 STARBOARD 19 15 19 17  ;\",\"1\",\"38 7 13 2 8 3 2 0\",\"8\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"8 9 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"15 18 8\",\"12\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"21 11 20 20\",\"23 14 9 15\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 17\",\"\"],[\"KEY_FRAME 18\",\"0\",\"0 2 10 0 91 1 WAIT 2 11 2 9  ;\",\"2 8 18 5 68 1 WAIT 9 18 7 17  ;\",\"4 10 21 4 100 1 STARBOARD 11 20 9 21  ;\",\"1\",\"1 15 7 1 97 0 PORT 14 8 16 7  ;\",\"3 15 10 3 96 0 SLOWER 15 9 15 11  ;\",\"5 19 15 3 98 1 WAIT 19 14 19 16  ;\",\"1\",\"38 7 13 2 8 3 1 0\",\"7\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"11 13 13\",\"10 7 13\",\"13 13 6\",\"15 18 8\",\"11\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"23 14 9 15\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"1\",\"9 18 25 1\",\"\"],[\"INTERMEDIATE_FRAME 19\",\"\"],[\"KEY_FRAME 20\",\"0\",\"0 2 11 0 90 1 WAIT 2 12 2 10  ;\",\"2 9 18 0 67 1 PORT 9 19 9 17  ;\",\"4 11 20 3 99 1 STARBOARD 11 19 11 21  ;\",\"1\",\"1 15 7 0 96 0 STARBOARD 15 8 15 6  ;\",\"3 15 10 2 95 0 STARBOARD 14 10 16 11  ;\",\"5 19 14 3 97 1 WAIT 19 13 19 15  ;\",\"1\",\"38 7 13 2 8 3 0 0\",\"6\",\"7 13 2\",\"6 7 2\",\"9 11 18\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"11\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"23 14 9 15\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"1\",\"7 13 0 0\",\"\"],[\"INTERMEDIATE_FRAME 21\",\"\"],[\"KEY_FRAME 22\",\"0\",\"0 2 12 0 89 1 WAIT 2 13 2 11  ;\",\"2 9 19 0 66 0 PORT 9 20 9 18  ;\",\"4 11 19 3 73 0 STARBOARD 11 18 11 20  ;\",\"1\",\"1 15 8 0 95 1 FASTER 15 9 15 7  ;\",\"3 14 10 2 94 1 FASTER 13 9 15 10  ;\",\"5 19 13 3 96 1 WAIT 19 12 19 14  ;\",\"0\",\"5\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"11\",\"17 19 11 11\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"23 14 9 15\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"1\",\"11 18 25 1\",\"\"],[\"INTERMEDIATE_FRAME 23\",\"\"],[\"KEY_FRAME 24\",\"0\",\"0 2 13 0 88 1 WAIT 2 14 2 12  ;\",\"2 9 19 0 65 0 PORT 9 20 9 18  ;\",\"4 11 19 3 72 0 STARBOARD 11 18 11 20  ;\",\"1\",\"1 15 8 1 100 0 PORT 14 9 16 8  ;\",\"3 14 10 2 93 0 SLOWER 13 9 15 10  ;\",\"5 19 12 3 100 1 WAIT 19 11 19 13  ;\",\"0\",\"5\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"9\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 25\",\"\"],[\"KEY_FRAME 26\",\"0\",\"0 2 14 0 87 1 WAIT 2 15 2 13  ;\",\"2 9 19 1 64 0 PORT 8 20 10 19  ;\",\"4 11 19 3 71 0 FIRE 11 18 11 20  ;\",\"1\",\"1 15 8 0 99 0 STARBOARD 15 9 15 7  ;\",\"3 13 9 2 92 1 FASTER 12 9 14 10  ;\",\"5 19 11 3 99 1 WAIT 19 10 19 12  ;\",\"1\",\"39 19 12 11 18 4 4 4\",\"5\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"9\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 27\",\"\"],[\"KEY_FRAME 28\",\"0\",\"0 2 15 0 86 1 WAIT 2 16 2 14  ;\",\"2 9 19 2 63 0 PORT 8 19 10 20  ;\",\"4 11 19 2 70 0 STARBOARD 10 19 12 20  ;\",\"1\",\"1 15 8 5 98 0 STARBOARD 16 9 14 8  ;\",\"3 12 9 2 91 1 WAIT 11 8 13 9  ;\",\"5 19 10 3 98 1 WAIT 19 9 19 11  ;\",\"1\",\"39 19 12 11 18 4 3 4\",\"5\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"9\",\"16 1 11 11\",\"19 19 8 16\",\"18 1 8 16\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"31 10 8 12\",\"32 2 17 17\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 29\",\"\"],[\"KEY_FRAME 30\",\"0\",\"0 2 16 0 100 1 WAIT 2 17 2 15  ;\",\"2 8 19 2 62 1 FASTER 7 18 9 19  ;\",\"4 10 19 2 69 1 FASTER 9 18 11 19  ;\",\"1\",\"1 16 9 5 97 1 FASTER 17 9 15 8  ;\",\"3 11 8 2 100 1 WAIT 10 8 12 9  ;\",\"5 19 9 3 100 1 WAIT 19 8 19 10  ;\",\"1\",\"39 19 12 11 18 4 2 4\",\"5\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"15 18 8\",\"6\",\"16 1 11 11\",\"18 1 8 16\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 31\",\"\"],[\"KEY_FRAME 32\",\"0\",\"0 2 16 0 99 0 SLOWER 2 17 2 15  ;\",\"2 7 18 2 61 1 WAIT 6 18 8 19  ;\",\"4 9 18 2 68 1 WAIT 8 18 10 19  ;\",\"1\",\"1 17 9 0 86 1 PORT 17 10 17 8  ;\",\"3 10 8 1 99 1 STARBOARD 9 8 11 7  ;\",\"5 19 8 2 74 1 STARBOARD 18 8 20 9  ;\",\"1\",\"39 19 12 11 18 4 1 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"6\",\"16 1 11 11\",\"18 1 8 16\",\"22 6 9 15\",\"24 1 16 16\",\"27 5 6 17\",\"29 4 12 19\",\"2\",\"18 8 25 1\",\"17 8 10 1\",\"\"],[\"INTERMEDIATE_FRAME 33\",\"\"],[\"KEY_FRAME 34\",\"0\",\"0 2 16 1 100 0 PORT 1 16 3 15  ;\",\"2 6 18 2 60 1 WAIT 5 17 7 18  ;\",\"4 8 18 2 67 1 WAIT 7 17 9 18  ;\",\"1\",\"1 17 10 1 85 1 PORT 16 11 18 10  ;\",\"3 9 8 1 98 1 WAIT 8 9 10 8  ;\",\"5 18 8 2 73 1 WAIT 17 7 19 8  ;\",\"1\",\"39 19 12 11 18 4 0 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"5\",\"16 1 11 11\",\"18 1 8 16\",\"22 6 9 15\",\"27 5 6 17\",\"29 4 12 19\",\"1\",\"19 12 0 0\",\"\"],[\"INTERMEDIATE_FRAME 35\",\"\"],[\"KEY_FRAME 36\",\"0\",\"0 2 16 2 99 0 PORT 1 15 3 16  ;\",\"2 5 17 3 59 1 PORT 5 16 5 18  ;\",\"4 7 17 2 66 1 WAIT 6 17 8 18  ;\",\"1\",\"1 16 11 1 84 1 WAIT 15 11 17 10  ;\",\"3 8 9 1 97 1 WAIT 7 9 9 8  ;\",\"5 17 7 2 72 1 WAIT 16 7 18 8  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"5\",\"16 1 11 11\",\"18 1 8 16\",\"22 6 9 15\",\"27 5 6 17\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 37\",\"\"],[\"KEY_FRAME 38\",\"0\",\"0 2 16 3 98 0 PORT 2 15 2 17  ;\",\"2 5 16 3 58 1 WAIT 5 15 5 17  ;\",\"4 7 17 2 65 0 WAIT 6 17 8 18  ;\",\"1\",\"1 15 11 1 83 1 WAIT 14 12 16 11  ;\",\"3 7 9 2 100 1 PORT 6 9 8 10  ;\",\"5 16 7 2 71 1 WAIT 15 6 17 7  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"4\",\"16 1 11 11\",\"18 1 8 16\",\"27 5 6 17\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 39\",\"\"],[\"KEY_FRAME 40\",\"0\",\"0 2 15 3 97 1 FASTER 2 14 2 16  ;\",\"2 5 15 3 57 1 WAIT 5 14 5 16  ;\",\"4 7 17 2 64 0 FASTER 6 17 8 18  ;\",\"1\",\"1 14 12 1 82 1 WAIT 13 12 15 11  ;\",\"3 6 9 2 99 1 WAIT 5 8 7 9  ;\",\"5 15 6 2 70 1 WAIT 14 6 16 7  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"4\",\"16 1 11 11\",\"18 1 8 16\",\"27 5 6 17\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 41\",\"\"],[\"KEY_FRAME 42\",\"0\",\"0 2 14 3 96 1 WAIT 2 13 2 15  ;\",\"2 5 14 3 56 1 WAIT 5 13 5 15  ;\",\"4 7 17 2 63 0 WAIT 6 17 8 18  ;\",\"1\",\"1 13 12 1 81 1 WAIT 12 13 14 12  ;\",\"3 5 8 3 98 1 PORT 5 7 5 9  ;\",\"5 14 6 2 69 1 WAIT 13 5 15 6  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"4\",\"16 1 11 11\",\"18 1 8 16\",\"27 5 6 17\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 43\",\"\"],[\"KEY_FRAME 44\",\"0\",\"0 2 13 4 95 1 PORT 3 12 1 13  ;\",\"2 5 13 2 55 1 STARBOARD 4 13 6 14  ;\",\"4 6 17 2 62 1 FASTER 5 16 7 17  ;\",\"1\",\"1 12 13 1 80 1 WAIT 11 13 13 12  ;\",\"3 5 7 3 100 1 WAIT 5 6 5 8  ;\",\"5 13 5 2 68 1 WAIT 12 5 14 6  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"3\",\"16 1 11 11\",\"18 1 8 16\",\"29 4 12 19\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 45\",\"\"],[\"KEY_FRAME 46\",\"0\",\"0 3 12 4 100 1 WAIT 4 12 2 13  ;\",\"2 5 13 3 54 0 PORT 5 12 5 14  ;\",\"4 5 16 3 61 1 PORT 5 15 5 17  ;\",\"1\",\"1 11 13 1 79 1 WAIT 10 14 12 13  ;\",\"3 5 6 2 99 1 STARBOARD 4 6 6 7  ;\",\"5 12 5 1 67 1 STARBOARD 11 5 13 4  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"2\",\"16 1 11 11\",\"18 1 8 16\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 47\",\"\"],[\"KEY_FRAME 48\",\"0\",\"0 4 12 4 99 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 53 0 STARBOARD 5 12 5 14  ;\",\"4 5 16 3 60 0 WAIT 5 15 5 17  ;\",\"1\",\"1 10 14 2 78 1 PORT 9 13 11 14  ;\",\"3 4 6 1 98 1 STARBOARD 3 6 5 5  ;\",\"5 11 5 1 66 1 WAIT 10 6 12 5  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"2\",\"16 1 11 11\",\"18 1 8 16\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 49\",\"\"],[\"KEY_FRAME 50\",\"0\",\"0 4 12 4 98 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 52 0 STARBOARD 5 12 5 14  ;\",\"4 5 16 2 59 0 STARBOARD 4 16 6 17  ;\",\"1\",\"1 9 13 2 77 1 WAIT 8 13 10 14  ;\",\"3 3 6 1 97 1 WAIT 2 7 4 6  ;\",\"5 10 6 1 65 1 WAIT 9 6 11 5  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"2\",\"16 1 11 11\",\"18 1 8 16\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 51\",\"\"],[\"KEY_FRAME 52\",\"0\",\"0 4 12 4 97 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 51 0 STARBOARD 5 12 5 14  ;\",\"4 4 16 2 58 1 FASTER 3 15 5 16  ;\",\"1\",\"1 8 13 2 76 1 WAIT 7 12 9 13  ;\",\"3 2 7 1 96 1 WAIT 1 7 3 6  ;\",\"5 9 6 1 64 1 WAIT 8 7 10 6  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"2\",\"16 1 11 11\",\"18 1 8 16\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 53\",\"\"],[\"KEY_FRAME 54\",\"0\",\"0 4 12 4 96 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 50 0 STARBOARD 5 12 5 14  ;\",\"4 3 15 2 57 1 WAIT 2 15 4 16  ;\",\"1\",\"1 7 12 2 75 1 WAIT 6 12 8 13  ;\",\"3 1 7 0 100 1 STARBOARD 1 8 1 6  ;\",\"5 8 7 1 63 1 WAIT 7 7 9 6  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"16 1 11 11\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 55\",\"\"],[\"KEY_FRAME 56\",\"0\",\"0 4 12 4 95 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 49 0 STARBOARD 5 12 5 14  ;\",\"4 2 15 3 56 1 PORT 2 14 2 16  ;\",\"1\",\"1 7 12 2 74 0 WAIT 6 12 8 13  ;\",\"3 1 8 0 99 1 WAIT 1 9 1 7  ;\",\"5 7 7 1 62 1 WAIT 6 8 8 7  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"16 1 11 11\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 57\",\"\"],[\"KEY_FRAME 58\",\"0\",\"0 4 12 4 94 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 48 0 STARBOARD 5 12 5 14  ;\",\"4 2 14 3 55 1 WAIT 2 13 2 15  ;\",\"1\",\"1 7 12 2 73 0 FASTER 6 12 8 13  ;\",\"3 1 9 0 98 1 WAIT 1 10 1 8  ;\",\"5 6 8 1 61 1 WAIT 5 8 7 7  ;\",\"0\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"16 1 11 11\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 59\",\"\"],[\"KEY_FRAME 60\",\"0\",\"0 4 12 4 93 0 STARBOARD 5 11 3 12  ;\",\"2 5 13 3 47 0 STARBOARD 5 12 5 14  ;\",\"4 2 13 3 54 1 WAIT 2 12 2 14  ;\",\"1\",\"1 7 12 2 72 0 FIRE 6 12 8 13  ;\",\"3 1 10 0 100 1 FIRE 1 11 1 9  ;\",\"5 5 8 1 60 1 FIRE 4 9 6 8  ;\",\"3\",\"40 5 11 6 12 1 1 1\",\"41 5 11 1 10 2 2 3\",\"42 5 11 5 8 2 2 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 61\",\"\"],[\"KEY_FRAME 62\",\"0\",\"0 5 11 4 42 1 FASTER 6 11 4 12  ;\",\"2 5 13 4 46 0 PORT 6 13 4 14  ;\",\"4 2 12 3 53 0 PORT 2 11 2 13  ;\",\"1\",\"1 7 12 2 71 0 FASTER 6 12 8 13  ;\",\"3 1 11 0 99 0 STARBOARD 1 12 1 10  ;\",\"5 4 9 0 59 1 STARBOARD 4 10 4 8  ;\",\"3\",\"40 5 11 6 12 1 0 1\",\"41 5 11 1 10 2 1 3\",\"42 5 11 5 8 2 1 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"1\",\"5 11 50 1\",\"\"],[\"INTERMEDIATE_FRAME 63\",\"\"],[\"KEY_FRAME 64\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 5 13 4 45 0 FASTER 6 13 4 14  ;\",\"4 2 12 3 52 0 PORT 2 11 2 13  ;\",\"1\",\"1 7 12 2 70 0 FASTER 6 12 8 13  ;\",\"3 1 11 0 98 0 STARBOARD 1 12 1 10  ;\",\"5 4 10 5 58 1 STARBOARD 5 10 3 9  ;\",\"2\",\"41 5 11 1 10 2 0 3\",\"42 5 11 5 8 2 0 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"43 6 11 30\",\"2\",\"5 11 25 1\",\"5 11 25 1\",\"\"],[\"INTERMEDIATE_FRAME 65\",\"\"],[\"KEY_FRAME 66\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 5 13 5 44 0 PORT 6 14 4 13  ;\",\"4 2 12 3 51 0 FIRE 2 11 2 13  ;\",\"1\",\"1 6 12 2 69 1 FASTER 5 11 7 12  ;\",\"3 1 11 0 97 0 STARBOARD 1 12 1 10  ;\",\"5 5 10 5 87 1 WAIT 6 11 4 10  ;\",\"1\",\"44 4 10 2 11 1 1 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 67\",\"\"],[\"KEY_FRAME 68\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 5 13 4 43 0 STARBOARD 6 13 4 14  ;\",\"4 2 12 3 50 0 PORT 2 11 2 13  ;\",\"1\",\"1 5 11 2 68 0 STARBOARD 4 11 6 12  ;\",\"3 1 11 0 96 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 86 0 PORT 7 11 5 10  ;\",\"1\",\"44 4 10 2 11 1 0 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"1\",\"4 10 0 0\",\"\"],[\"INTERMEDIATE_FRAME 69\",\"\"],[\"KEY_FRAME 70\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 6 13 4 42 1 FASTER 7 12 5 13  ;\",\"4 2 12 3 49 0 FIRE 2 11 2 13  ;\",\"1\",\"1 5 11 2 67 0 STARBOARD 4 11 6 12  ;\",\"3 1 11 0 95 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 85 0 PORT 7 11 5 10  ;\",\"1\",\"45 6 11 2 11 2 2 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 71\",\"\"],[\"KEY_FRAME 72\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 7 12 4 41 1 WAIT 8 12 6 13  ;\",\"4 2 12 3 48 0 PORT 2 11 2 13  ;\",\"1\",\"1 5 11 2 66 0 FIRE 4 11 6 12  ;\",\"3 1 11 0 94 0 FIRE 1 12 1 10  ;\",\"5 6 11 5 84 0 FIRE 7 11 5 10  ;\",\"4\",\"45 6 11 2 11 2 1 4\",\"46 7 12 4 11 2 2 1\",\"47 7 12 1 12 3 3 3\",\"48 7 12 7 11 1 1 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 73\",\"\"],[\"KEY_FRAME 74\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 8 12 4 15 1 WAIT 9 11 7 12  ;\",\"4 2 12 3 47 0 FIRE 2 11 2 13  ;\",\"1\",\"1 5 11 2 65 0 PORT 4 11 6 12  ;\",\"3 1 11 0 93 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 33 0 FASTER 7 11 5 10  ;\",\"5\",\"45 6 11 2 11 2 0 4\",\"46 7 12 4 11 2 1 1\",\"47 7 12 1 12 3 2 3\",\"48 7 12 7 11 1 0 5\",\"49 6 11 2 11 2 2 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"2\",\"7 12 25 1\",\"6 11 50 1\",\"\"],[\"INTERMEDIATE_FRAME 75\",\"\"],[\"KEY_FRAME 76\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 9 11 4 14 1 WAIT 10 11 8 12  ;\",\"4 2 12 3 46 0 PORT 2 11 2 13  ;\",\"1\",\"1 5 11 2 64 0 PORT 4 11 6 12  ;\",\"3 1 11 0 92 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 32 0 STARBOARD 7 11 5 10  ;\",\"3\",\"46 7 12 4 11 2 0 1\",\"47 7 12 1 12 3 1 3\",\"49 6 11 2 11 2 1 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"1\",\"7 12 0 0\",\"\"],[\"INTERMEDIATE_FRAME 77\",\"\"],[\"KEY_FRAME 78\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 10 11 5 13 1 PORT 11 11 9 10  ;\",\"4 2 12 3 45 0 FIRE 2 11 2 13  ;\",\"1\",\"1 5 11 2 63 0 FIRE 4 11 6 12  ;\",\"3 1 11 0 91 0 FIRE 1 12 1 10  ;\",\"5 6 11 5 0 0 FIRE 7 11 5 10  ;\",\"6\",\"47 7 12 1 12 3 0 3\",\"49 6 11 2 11 2 0 4\",\"50 6 11 2 11 2 2 4\",\"51 10 11 4 11 3 3 1\",\"52 10 11 1 12 4 4 3\",\"53 10 11 7 11 2 2 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"54 6 11 30\",\"2\",\"6 11 50 1\",\"7 12 0 0\",\"\"],[\"INTERMEDIATE_FRAME 79\",\"\"],[\"KEY_FRAME 80\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 11 11 0 12 1 PORT 11 12 11 10  ;\",\"4 2 12 3 44 0 PORT 2 11 2 13  ;\",\"1\",\"1 5 11 3 62 0 PORT 5 10 5 12  ;\",\"3 1 11 0 90 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"4\",\"50 6 11 2 11 2 1 4\",\"51 10 11 4 11 3 2 1\",\"52 10 11 1 12 4 3 3\",\"53 10 11 7 11 2 1 5\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"1\",\"54 6 11 30\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 81\",\"\"],[\"KEY_FRAME 82\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 11 12 5 11 1 STARBOARD 12 13 10 12  ;\",\"4 2 12 3 43 0 FIRE 2 11 2 13  ;\",\"1\",\"1 5 11 4 66 0 PORT 6 11 4 12  ;\",\"3 1 11 0 89 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"5\",\"50 6 11 2 11 2 0 4\",\"51 10 11 4 11 3 1 1\",\"52 10 11 1 12 4 2 3\",\"53 10 11 7 11 2 0 5\",\"55 1 11 2 11 1 1 4\",\"4\",\"7 13 2\",\"6 7 2\",\"11 13 13\",\"13 13 6\",\"0\",\"2\",\"6 11 25 1\",\"10 11 0 0\",\"\"],[\"INTERMEDIATE_FRAME 83\",\"\"],[\"KEY_FRAME 84\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 STARBOARD 13 13 11 12  ;\",\"4 2 12 3 42 0 PORT 2 11 2 13  ;\",\"1\",\"1 5 11 4 65 0 FIRE 6 11 4 12  ;\",\"3 1 11 0 38 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"4\",\"51 10 11 4 11 3 0 1\",\"52 10 11 1 12 4 1 3\",\"55 1 11 2 11 1 0 4\",\"56 12 13 6 11 3 3 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"1\",\"57 12 13 30\",\"3\",\"13 13 25 1\",\"1 11 50 1\",\"10 11 0 0\",\"\"],[\"INTERMEDIATE_FRAME 85\",\"\"],[\"KEY_FRAME 86\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 3 41 0 FIRE 2 11 2 13  ;\",\"1\",\"1 5 11 5 64 0 PORT 6 12 4 11  ;\",\"3 1 11 0 37 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"3\",\"52 10 11 1 12 4 0 3\",\"56 12 13 6 11 3 2 1\",\"58 1 11 2 11 1 1 4\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"1\",\"57 12 13 30\",\"1\",\"10 11 0 0\",\"\"],[\"INTERMEDIATE_FRAME 87\",\"\"],[\"KEY_FRAME 88\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 4 40 0 PORT 3 11 1 12  ;\",\"1\",\"1 6 12 5 63 1 FASTER 7 12 5 11  ;\",\"3 1 11 0 0 0 STARBOARD 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"2\",\"56 12 13 6 11 3 1 1\",\"58 1 11 2 11 1 0 4\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"2\",\"57 12 13 30\",\"59 1 11 30\",\"1\",\"1 11 50 1\",\"\"],[\"INTERMEDIATE_FRAME 89\",\"\"],[\"KEY_FRAME 90\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 3 39 0 STARBOARD 2 11 2 13  ;\",\"1\",\"1 7 12 0 62 1 PORT 7 13 7 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"56 12 13 6 11 3 0 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"1\",\"59 1 11 30\",\"2\",\"12 13 0 1\",\"12 13 0 0\",\"\"],[\"INTERMEDIATE_FRAME 91\",\"\"],[\"KEY_FRAME 92\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 2 68 0 STARBOARD 1 11 3 12  ;\",\"1\",\"1 7 13 1 61 1 PORT 6 14 8 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"0\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 93\",\"\"],[\"KEY_FRAME 94\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 3 67 0 PORT 2 11 2 13  ;\",\"1\",\"1 6 14 2 60 1 PORT 5 13 7 14  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"0\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 95\",\"\"],[\"KEY_FRAME 96\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 2 12 4 66 0 PORT 3 11 1 12  ;\",\"1\",\"1 5 13 2 59 1 FIRE 4 13 6 14  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"60 2 11 5 13 2 2 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 97\",\"\"],[\"KEY_FRAME 98\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 3 11 4 65 1 FASTER 4 11 2 12  ;\",\"1\",\"1 4 13 2 58 1 WAIT 3 12 5 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"60 2 11 5 13 2 1 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 99\",\"\"],[\"KEY_FRAME 100\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 4 11 4 64 0 WAIT 5 10 3 11  ;\",\"1\",\"1 3 12 2 57 0 PORT 2 12 4 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"60 2 11 5 13 2 0 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"1\",\"2 11 0 0\",\"\"],[\"INTERMEDIATE_FRAME 101\",\"\"],[\"KEY_FRAME 102\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 5 10 4 63 1 FASTER 6 10 4 11  ;\",\"1\",\"1 3 12 2 56 0 FIRE 2 12 4 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"61 5 10 2 12 2 2 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 103\",\"\"],[\"KEY_FRAME 104\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 6 10 4 62 1 WAIT 7 9 5 10  ;\",\"1\",\"1 3 12 3 55 0 PORT 3 11 3 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"61 5 10 2 12 2 1 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 105\",\"\"],[\"KEY_FRAME 106\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 7 9 4 61 1 WAIT 8 9 6 10  ;\",\"1\",\"1 3 12 4 54 0 PORT 4 12 2 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"61 5 10 2 12 2 0 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"1\",\"5 10 0 0\",\"\"],[\"INTERMEDIATE_FRAME 107\",\"\"],[\"KEY_FRAME 108\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 8 9 5 60 1 PORT 9 9 7 8  ;\",\"1\",\"1 3 12 4 53 0 FIRE 4 12 2 13  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"62 8 9 4 12 2 2 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 109\",\"\"],[\"KEY_FRAME 110\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 9 9 5 59 1 WAIT 10 10 8 9  ;\",\"1\",\"1 4 12 4 52 1 FASTER 5 11 3 12  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"62 8 9 4 12 2 1 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 111\",\"\"],[\"KEY_FRAME 112\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 58 1 WAIT 11 10 9 9  ;\",\"1\",\"1 5 11 4 51 1 WAIT 6 11 4 12  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"62 8 9 4 12 2 0 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"1\",\"8 9 0 0\",\"\"],[\"INTERMEDIATE_FRAME 113\",\"\"],[\"KEY_FRAME 114\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 57 0 SLOWER 11 10 9 9  ;\",\"1\",\"1 6 11 4 50 1 FIRE 7 10 5 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"63 11 10 6 11 2 2 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 115\",\"\"],[\"KEY_FRAME 116\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 56 0 SLOWER 11 10 9 9  ;\",\"1\",\"1 7 10 4 49 1 WAIT 8 10 6 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"1\",\"63 11 10 6 11 2 1 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 117\",\"\"],[\"KEY_FRAME 118\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 30 0 FIRE 11 10 9 9  ;\",\"1\",\"1 7 10 4 48 0 WAIT 8 10 6 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"2\",\"63 11 10 6 11 2 0 1\",\"64 7 10 11 10 2 2 4\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"1\",\"11 10 25 1\",\"\"],[\"INTERMEDIATE_FRAME 119\",\"\"],[\"KEY_FRAME 120\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 29 0 SLOWER 11 10 9 9  ;\",\"1\",\"1 7 10 4 47 0 FIRE 8 10 6 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"2\",\"64 7 10 11 10 2 1 4\",\"65 11 10 8 10 2 2 1\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"0\",\"0\",\"\"],[\"INTERMEDIATE_FRAME 121\",\"\"],[\"KEY_FRAME 122 endReached\",\"0\",\"0 6 11 4 0 1 WAIT 7 10 5 11  ;\",\"2 12 13 5 0 1 WAIT 13 13 11 12  ;\",\"4 10 10 5 28 0 FIRE 11 10 9 9  ;\",\"1\",\"1 7 10 4 0 0 FASTER 8 10 6 11  ;\",\"3 1 11 0 0 0 WAIT 1 12 1 10  ;\",\"5 6 11 5 0 0 WAIT 7 11 5 10  ;\",\"3\",\"64 7 10 11 10 2 0 4\",\"65 11 10 8 10 2 1 1\",\"66 7 10 11 10 2 2 4\",\"3\",\"7 13 2\",\"6 7 2\",\"13 13 6\",\"1\",\"67 7 10 30\",\"1\",\"7 10 50 1\",\"\"]]\n};"}}