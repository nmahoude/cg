package meanmax.simulation;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.*;

import java.util.Locale;
import java.util.Scanner;

import org.junit.Before;
import org.junit.Test;

import meanmax.Game;
import meanmax.ai.ag.AGSolution;
import meanmax.entities.Entity;
import meanmax.entities.SkillEffect;
import meanmax.entities.Tanker;
import meanmax.entities.Wreck;

public class SimulationTest {
  static Entity entities[] = new Entity[100];
  Simulation simulation;
  Action actions[] = new Action[9];
  private int currentAction;
  
  @Before 
  public void setup() {
    Game.DEBUG_INPUT = false;
    Game.turnInit();
    
    for (int i=0;i<3;i++) {
      Game.players[i].rage = 100;
    }
    simulation = new Simulation();
    for (int i=0;i<9;i++) {
      actions[i] = new Action();
    }
  }
  
  @Test
  public void startOfGame() throws Exception {
    read(0,0,0,0.5,400,2161.0,1486.0,0.0,0.0,-1,-1);
    read(1,1,0,1.5,400,3281.0,2051.0,0.0,0.0,-1,-1);
    read(2,2,0,1.0,400,2108.0,399.0,0.0,0.0,-1,-1);
    read(3,0,1,0.5,400,-2367.0,1129.0,0.0,0.0,-1,-1);
    read(4,1,1,1.5,400,-3416.0,1816.0,0.0,0.0,-1,-1);
    read(5,2,1,1.0,400,-1400.0,1626.0,0.0,0.0,-1,-1);
    read(6,0,2,0.5,400,206.0,-2615.0,0.0,0.0,-1,-1);
    read(7,1,2,1.5,400,135.0,-3867.0,0.0,0.0,-1,-1);
    read(8,2,2,1.0,400,-708.0,-2025.0,0.0,0.0,-1,-1);
    
    read(9,3,-1,3.0,750,7561.0,4404.0,-346.0,-201.0,1,7);
    read(10,3,-1,3.0,750,-7594.0,4346.0,347.0,-199.0,1,7);
    read(11,3,-1,3.0,750,33.0,-8750.0,-2.0,400.0,1,7);
    read(12,3,-1,3.0,700,-3580.0,7929.0,165.0,-365.0,1,6);
    read(13,3,-1,3.0,700,-5077.0,-7065.0,233.0,325.0,1,6);
    read(14,3,-1,3.0,700,8657.0,-865.0,-398.0,40.0,1,6);
    
    resetActions();
    // Standard Output Stream:
    parseAction("3281 2051 300");
    parseAction("7561 4404 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("0 0 300");
    parseAction("0 0 300");
    parseAction("2161 1486 300");

    // Standard Output Stream:
    parseAction("0 0 300");
    parseAction("0 0 300");
    parseAction("-2367 1129 300");
    
    simulation.simulate(actions);
    
    // check
    check(0,0,0,0.5,400,2697.0,1756.0,429.0,216.0,-1,-1);
    check(1,1,0,1.5,400,3456.0,2147.0,123.0,67.0,-1,-1);
    check(2,2,0,1.0,400,2108.0,399.0,0.0,0.0,-1,-1);
    
    check(3,0,1,0.5,400,-1825.0,871.0,433.0,-207.0,-1,-1);
    check(4,1,1,1.5,400,-3239.0,1722.0,124.0,-66.0,-1,-1);
    check(5,2,1,1.0,400,-1100.0,1614.0,225.0,-9.0,-1,-1);
    
    check(6,0,2,0.5,400,159.0,-2017.0,-38.0,479.0,-1,-1);
    check(7,1,2,1.5,400,128.0,-3667.0,-5.0,140.0,-1,-1);
    check(8,2,2,1.0,400,-848.0,-1759.0,-105.0,199.0,-1,-1);
    
    check(9,3,-1,3.0,750,7071.0,4119.0,-294.0,-171.0,1,7);
    check(10,3,-1,3.0,750,-7102.0,4064.0,295.0,-169.0,1,7);
    check(11,3,-1,3.0,750,30.0,-8183.0,-2.0,340.0,1,7);
    check(12,3,-1,3.0,700,-3346.0,7412.0,140.0,-310.0,1,6);
    check(13,3,-1,3.0,700,-4747.0,-6605.0,198.0,276.0,1,6);
    check(14,3,-1,3.0,700,8093.0,-808.0,-338.0,34.0,1,6);
  }

  private void resetActions() {
    currentAction = 0;
  }

  private void parseAction(String action) {
    actions[currentAction] = Action.parse(entities[currentAction++], action);
  }

  @Test
  public void withCollisions() throws Exception {
    read(0,0,0,0.5,400,-2464.0,4384.0,-748.0,-411.0,-1,-1);
    read(1,1,0,1.5,400,-2251.0,3496.0,-213.0,-453.0,-1,-1);
    read(2,2,0,1.0,400,4655.0,620.0,-154.0,-232.0,-1,-1);
    read(3,0,1,0.5,400,-1361.0,302.0,-265.0,-104.0,-1,-1);
    read(4,1,1,1.5,400,-63.0,317.0,-177.0,-28.0,-1,-1);
    read(5,2,1,1.0,400,-1615.0,-488.0,289.0,-64.0,-1,-1);
    read(6,0,2,0.5,400,-1042.0,-1290.0,457.0,-167.0,-1,-1);
    read(7,1,2,1.5,400,461.0,-725.0,-178.0,-68.0,-1,-1);
    read(8,2,2,1.0,400,-629.0,-289.0,-246.0,150.0,-1,-1);
    read(10,3,-1,4.0,700,-2487.0,-1280.0,-66.0,-37.0,3,6);
    read(11,3,-1,4.0,700,2247.0,-1415.0,-127.0,80.0,3,6);
    read(13,3,-1,3.0,750,5242.0,1684.0,-201.0,-15.0,1,7);
    
    
    resetActions();
    // Standard Output Stream:
    parseAction("-2251 3496 300");
    parseAction("-2487 -1280 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("-2288 -1213 300");
    parseAction("-2376 -1289 300");
    parseAction("-874 -1393 300");

    // Standard Output Stream:
    parseAction("-3010 -1150 300");
    parseAction("-2375 -1249 300");
    parseAction("-1380 48 300");
      
    simulation.simulate(actions);
    
    // check
    check(0,0,0,0.5,400,-3072.0,3390.0,-486.0,-796.0,-1,-1);
    check(1,1,0,1.5,400,-2474.0,2843.0,-156.0,-457.0,-1,-1);
    check(2,2,0,1.0,400,4501.0,388.0,-116.0,-174.0,-1,-1);
    check(3,0,1,0.5,400,-1889.0,267.0,-494.0,38.0,-1,-1);
    check(4,1,1,1.5,400,-288.0,267.0,-120.0,-7.0,-1,-1);
    check(5,2,1,1.0,400,-1509.0,-967.0,71.0,-319.0,-1,-1);
    check(6,0,2,0.5,400,-939.0,-1822.0,162.0,-558.0,-1,-1);
    check(7,1,2,1.5,400,86.0,-829.0,-262.0,-73.0,-1,-1);
    check(8,2,2,1.0,400,-1093.0,-56.0,-302.0,155.0,-1,-1);
    check(10,3,-1,4.5,700,-2554.0,-1317.0,-60.0,-29.0,4,6);
    check(11,3,-1,4.5,700,2120.0,-1335.0,-76.0,48.0,4,6);
    check(13,3,-1,3.0,750,4882.0,1618.0,-216.0,-40.0,1,7);
  }
  
  @Test
  public void grenadeDontMoveWrecks() throws Exception {
    read(0,0,0,0.5,400.0,3609.0,13.0,363.0,-333.0,-1,-1);
    read(1,1,0,1.5,400.0,-1729.0,-584.0,-170.0,-154.0,-1,-1);
    read(2,2,0,1.0,400.0,-315.0,1767.0,-128.0,-334.0,-1,-1);
    read(3,0,1,0.5,400.0,2795.0,3.0,418.0,-292.0,-1,-1);
    read(4,1,1,1.5,400.0,1031.0,-836.0,44.0,280.0,-1,-1);
    read(5,2,1,1.0,400.0,-2355.0,218.0,-332.0,-555.0,-1,-1);
    read(6,0,2,0.5,400.0,-2231.0,-2224.0,-520.0,-237.0,-1,-1);
    read(7,1,2,1.5,400.0,2903.0,-911.0,163.0,-257.0,-1,-1);
    read(8,2,2,1.0,400.0,2713.0,-4050.0,-557.0,-526.0,-1,-1);
    read(63,3,-1,5.5,750.0,1124.0,2032.0,2.0,-31.0,6,7);
    read(69,3,-1,3.0,750.0,-4198.0,-362.0,250.0,22.0,1,7);
    read(72,3,-1,3.0,750.0,3867.0,-5541.0,-154.0,221.0,1,7);
    read(52,4,-1,-1.0,850.0,-4441.0,-4019.0,0.0,0.0,1,-1);
    read(71,4,-1,-1.0,800.0,2754.0,-437.0,0.0,0.0,6,-1);
    
    resetActions();
    // Standard Output Stream:
    parseAction("-5846 1478 300");
    parseAction("97 -1664 27");
    parseAction("4579 -4347 251");

    // Standard Output Stream:
    parseAction("2088 -704 300 3");
    parseAction("1031 164 300");
    parseAction("-2355 -782 300");

    // Standard Output Stream:
    parseAction("-2626090 -1456653 300");
    parseAction("SKILL 2947 -635");
    parseAction("-2646130 -1412465 300");
    
    simulation.simulate(actions);
    
    check(0,0,0,0.5,400.0,4808.0,1171.0,959.0,926.0,-1,-1);
    check(1,1,0,1.5,400.0,-1882.0,-747.0,91.0,-142.0,-1,-1);
    check(2,2,0,1.0,400.0,-286.0,1237.0,22.0,-397.0,-1,-1);
    check(3,0,1,0.5,400.0,2325.0,1232.0,-376.0,983.0,-1,-1);
    check(4,1,1,1.5,400.0,1075.0,-356.0,31.0,336.0,-1,-1);
    check(5,2,1,1.0,400.0,-2676.0,-640.0,-161.0,-703.0,-1,-1);
    check(6,0,2,0.5,400.0,-3276.0,-2752.0,-836.0,-422.0,-1,-1);
    check(7,1,2,1.5,400.0,2961.0,-1826.0,41.0,-641.0,-1,-1);
    check(8,2,2,1.0,400.0,1891.0,-4717.0,-616.0,-500.0,-1,-1);
    check(63,3,-1,6.0,750.0,1126.0,2001.0,1.0,-19.0,7,7);
    check(69,3,-1,3.0,750.0,-3786.0,-325.0,141.0,50.0,1,7);
    check(72,3,-1,3.0,750.0,3618.0,-5183.0,-150.0,215.0,1,7);
    check(52,4,-1,-1.0,850.0,-4441.0,-4019.0,0.0,0.0,1,-1);
    check(71,4,-1,-1.0,800.0,2754.0,-437.0,0.0,0.0,6,-1);
  }
  
  @Test
  public void collideOnWall() throws Exception {
    read(0,0,0,0.5,400.0,4808.0,1171.0,959.0,926.0,-1,-1);
    read(1,1,0,1.5,400.0,-1882.0,-747.0,91.0,-142.0,-1,-1);
    read(2,2,0,1.0,400.0,-286.0,1237.0,22.0,-397.0,-1,-1);
    read(3,0,1,0.5,400.0,2325.0,1232.0,-376.0,983.0,-1,-1);
    read(4,1,1,1.5,400.0,1075.0,-356.0,31.0,336.0,-1,-1);
    read(5,2,1,1.0,400.0,-2676.0,-640.0,-161.0,-703.0,-1,-1);
    read(6,0,2,0.5,400.0,-3276.0,-2752.0,-836.0,-422.0,-1,-1);
    read(7,1,2,1.5,400.0,2961.0,-1826.0,41.0,-641.0,-1,-1);
    read(8,2,2,1.0,400.0,1891.0,-4717.0,-616.0,-500.0,-1,-1);
    read(63,3,-1,6.0,750.0,1126.0,2001.0,1.0,-19.0,7,7);
    read(69,3,-1,3.0,750.0,-3786.0,-325.0,141.0,50.0,1,7);
    read(72,3,-1,3.0,750.0,3618.0,-5183.0,-150.0,215.0,1,7);
    read(52,4,-1,-1.0,850.0,-4441.0,-4019.0,0.0,0.0,1,-1);
    read(71,4,-1,-1.0,800.0,2754.0,-437.0,0.0,0.0,6,-1);
    
    resetActions();
    // Standard Output Stream:
    parseAction("5763 57 300");
    parseAction("-5952 -5326 300");
    parseAction("-799 399 300");
    
    // Standard Output Stream:
    parseAction("1618 525 300 4");
    parseAction("1075 644 300");
    parseAction("-2676 -1640 300");
    
    // Standard Output Stream:
    parseAction("773181 -2900530 300");
    parseAction("SKILL 1060 -1208");
    parseAction("-2646952 1403698 300");
    
    simulation.simulate(actions);
    
    check(0,0,0,0.5,400.0,5035.0,1355.0,-576.0,-47.0,-1,-1);
    check(1,1,0,1.5,400.0,-1872.0,-1043.0,9.0,-207.0,-1,-1);
    check(2,2,0,1.0,400.0,-421.0,584.0,-101.0,-490.0,-1,-1);
    check(3,0,1,0.5,400.0,2345.0,1256.0,271.0,-146.0,-1,-1);
    check(4,1,1,1.5,400.0,1118.0,847.0,30.0,842.0,-1,-1);
    check(5,2,1,1.0,400.0,-2780.0,-1678.0,-79.0,-779.0,-1,-1);
    check(6,0,2,0.5,400.0,-3957.0,-3754.0,-545.0,-801.0,-1,-1);
    check(7,1,2,1.5,400.0,3002.0,-2467.0,29.0,-449.0,-1,-1);
    check(8,2,2,1.0,400.0,1010.0,-5076.0,-661.0,-269.0,-1,-1);
    check(63,3,-1,6.0,750.0,1100.0,2099.0,-32.0,69.0,7,7);
    check(69,3,-1,3.0,750.0,-3523.0,-247.0,157.0,47.0,1,7);
    check(72,3,-1,3.0,750.0,3373.0,-4831.0,-147.0,211.0,1,7);
    check(71,4,-1,-1.0,800.0,2754.0,-437.0,0.0,0.0,6,-1);
  }
  
  @Test
  public void withSkills() throws Exception {
    read(0,0,0,0.5,400,-3056.0,-1224.0,891.0,215.0,-1,-1);
    read(1,1,0,1.5,400,-1680.0,-139.0,-326.0,-43.0,-1,-1);
    read(2,2,0,1.0,400,-3382.0,854.0,-59.0,3.0,-1,-1);
    read(3,0,1,0.5,400,-1945.0,803.0,129.0,453.0,-1,-1);
    read(4,1,1,1.5,400,-2478.0,-226.0,359.0,-109.0,-1,-1);
    read(5,2,1,1.0,400,-1269.0,-2122.0,76.0,-357.0,-1,-1);
    read(6,0,2,0.5,400,-2245.0,-1164.0,205.0,169.0,-1,-1);
    read(7,1,2,1.5,400,-1706.0,1747.0,-347.0,-137.0,-1,-1);
    read(8,2,2,1.0,400,-3746.0,-2578.0,-74.0,-5.0,-1,-1);
    read(35,3,-1,3.0,650,3942.0,-1170.0,-240.0,72.0,1,5);
    read(36,3,-1,3.0,650,-4357.0,-515.0,197.0,81.0,1,5);
    read(38,3,-1,3.0,650,-1286.0,6531.0,52.0,-264.0,1,5);
    read(33,4,-1,-1.0,800,137.0,-2667.0,0.0,0.0,1,-1);
    read(34,4,-1,-1.0,750,-2133.0,-1129.0,0.0,0.0,4,-1);
    read(37,4,-1,-1.0,750,-448.0,2490.0,0.0,0.0,4,-1);
    read(40,6,-1,-1.0,1000,-2133.0,-1129.0,0.0,0.0,2,-1);
    
    
    resetActions();
    // Standard Output Stream:
    parseAction("-2133 -1129 300");
    parseAction("-4357 -515 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("-577 2037 300");
    parseAction("3439 -1018 300");
    parseAction("-1641 -273 300");

    // Standard Output Stream:
    parseAction("-2407 -1354 300");
    parseAction("-4357 -515 300");
    parseAction("-2610 -1116 300");
    
    simulation.simulate(actions);
    
    // check
    check(0,0,0,0.5,400,-2922.0,-1255.0,-15.0,-384.0,-1,-1);
    check(1,1,0,1.5,400,-1394.0,-201.0,313.0,-191.0,-1,-1);
    check(2,2,0,1.0,400,-3441.0,857.0,-44.0,2.0,-1,-1);
    check(3,0,1,0.5,400,-1562.0,690.0,227.0,73.0,-1,-1);
    check(4,1,1,1.5,400,-2686.0,-376.0,-164.0,-32.0,-1,-1);
    check(5,2,1,1.0,400,-1252.0,-2185.0,17.0,-63.0,-1,-1);
    check(6,0,2,0.5,400,-1162.0,-1363.0,1093.0,-199.0,-1,-1);
    check(7,1,2,1.5,400,-2157.0,1881.0,-310.0,137.0,-1,-1);
    check(8,2,2,1.0,400,-3636.0,-2346.0,83.0,174.0,-1,-1);
    check(35,3,-1,3.0,650,3542.0,-1051.0,-240.0,72.0,1,5);
    check(36,3,-1,3.0,650,-3994.0,-414.0,218.0,60.0,1,5);
    check(38,3,-1,3.0,650,-1202.0,6103.0,51.0,-257.0,1,5);
    check(33,4,-1,-1.0,800,137.0,-2667.0,0.0,0.0,1,-1);
    check(34,4,-1,-1.0,750,-2133.0,-1129.0,0.0,0.0,4,-1);
    check(37,4,-1,-1.0,750,-448.0,2490.0,0.0,0.0,4,-1);
    check(40,6,-1,-1.0,1000,-2133.0,-1129.0,0.0,0.0,1,-1);
  }
  
  @Test
  public void skill_grenade() throws Exception {
    // https://www.codingame.com/replay/270219601
    // 465
    read(0,0,0,0.5,400,2459.0,-2258.0,-881.0,-21.0,-1,-1);
    read(1,1,0,1.5,400,2523.0,790.0,256.0,46.0,-1,-1);
    read(2,2,0,1.0,400,-4280.0,-1574.0,-15.0,-92.0,-1,-1);
    read(3,0,1,0.5,400,731.0,-185.0,-570.0,13.0,-1,-1);
    read(4,1,1,1.5,400,-501.0,2076.0,381.0,186.0,-1,-1);
    read(5,2,1,1.0,400,-1746.0,-936.0,531.0,-324.0,-1,-1);
    read(6,0,2,0.5,400,1979.0,-1268.0,1505.0,-47.0,-1,-1);
    read(7,1,2,1.5,400,2136.0,-59.0,27.0,-28.0,-1,-1);
    read(8,2,2,1.0,400,1568.0,609.0,-15.0,181.0,-1,-1);
    read(83,3,-1,3.0,600,3975.0,-2864.0,-205.0,147.0,1,4);
    read(85,3,-1,3.0,750,-7090.0,-2945.0,281.0,116.0,1,7);
    read(87,3,-1,3.0,600,8359.0,2023.0,-389.0,-94.0,1,4);
    read(82,4,-1,-1.0,650,2488.0,-1333.0,0.0,0.0,1,-1);
    read(84,4,-1,-1.0,800,-2464.0,2368.0,0.0,0.0,1,-1);
    read(86,4,-1,-1.0,750,307.0,2380.0,0.0,0.0,6,-1);

    resetActions();
    // Standard Output Stream:
    parseAction("2488 -1333 300");
    parseAction("3975 -2864 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("877 2367 300");
    parseAction("3471 -2962 300");
    parseAction("2456 -999 300");

    // Standard Output Stream:
    parseAction("475 -1270 300");
    parseAction("SKILL 1979 -1268 PEW!");
    parseAction("446 -178 300");
    
    simulation.simulate(actions);
    
    check(0,0,0,0.5,400,2469.0,-3479.0,8.0,-977.0,-1,-1);
    check(1,1,0,1.5,400,3019.0,905.0,383.0,135.0,-1,-1);
    check(2,2,0,1.0,400,-4295.0,-1666.0,-11.0,-69.0,-1,-1);
    check(3,0,1,0.5,400,195.0,427.0,-429.0,490.0,-1,-1);
    check(4,1,1,1.5,400,4.0,2105.0,353.0,20.0,-1,-1);
    check(5,2,1,1.0,400,-915.0,-1264.0,623.0,-246.0,-1,-1);
    check(6,0,2,0.5,400,2884.0,-1316.0,724.0,-38.0,-1,-1);
    check(7,1,2,1.5,400,2082.0,319.0,-73.0,211.0,-1,-1);
    check(8,2,2,1.0,400,1307.0,618.0,-195.0,7.0,-1,-1);
    check(83,3,-1,3.0,600,3635.0,-2620.0,-204.0,147.0,1,4);
    check(85,3,-1,3.0,750,-6655.0,-2765.0,261.0,108.0,1,7);
    check(87,3,-1,3.0,600,7808.0,1890.0,-331.0,-80.0,1,4);
    check(84,4,-1,-1.0,800,-2464.0,2368.0,0.0,0.0,1,-1);
    check(86,4,-1,-1.0,750,307.0,2380.0,0.0,0.0,6,-1);

  }
  
  @Test
  public void skill_oil() throws Exception {
    read(0,0,0,0.5,400,839.0,-1306.0,-437.0,-241.0,-1,-1);
    read(1,1,0,1.5,400,1143.0,-4731.0,189.0,-386.0,-1,-1);
    read(2,2,0,1.0,400,1059.0,-2314.0,117.0,-558.0,-1,-1);
    read(3,0,1,0.5,400,-424.0,-1706.0,-955.0,-608.0,-1,-1);
    read(4,1,1,1.5,400,3983.0,1335.0,-21.0,-227.0,-1,-1);
    read(5,2,1,1.0,400,3839.0,43.0,28.0,341.0,-1,-1);
    read(6,0,2,0.5,400,-648.0,3281.0,-550.0,-62.0,-1,-1);
    read(7,1,2,1.5,400,-339.0,2411.0,-52.0,-75.0,-1,-1);
    read(8,2,2,1.0,400,72.0,-2383.0,51.0,-131.0,-1,-1);
    read(50,3,-1,5.5,700,-6710.0,1348.0,-133.0,26.0,6,6);
    read(67,3,-1,3.0,600,7825.0,1817.0,-331.0,-77.0,1,4);
    read(69,3,-1,3.0,700,7163.0,-4938.0,-329.0,227.0,1,6);
    read(64,4,-1,-1.0,700,22.0,-2374.0,0.0,0.0,6,-1);
    read(68,4,-1,-1.0,650,1542.0,-5363.0,0.0,0.0,1,-1);
    
    int i = 0;
    // Standard Output Stream:
    parseAction("22 -2374 300");
    parseAction("7163 -4938 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("1454 -1462 300");
    parseAction("1276 -1065 300");
    parseAction("1276 -1065 300");

    // Standard Output Stream:
    parseAction("27718 -92611 300");
    parseAction("-65703 -73269 89");
    parseAction("SKILL -424 -1706");
    
    simulation.simulate(actions);
    
    check(0,0,0,0.5,400,171.0,-1675.0,-495.0,79.0,-1,-1);
    check(1,1,0,1.5,400,1532.0,-5124.0,272.0,-275.0,-1,-1);
    check(2,2,0,1.0,400,1176.0,-2872.0,88.0,-419.0,-1,-1);
    check(3,0,1,0.5,400,-784.0,-2237.0,-360.0,-531.0,-1,-1);
    check(4,1,1,1.5,400,3821.0,1008.0,-59.0,-33.0,-1,-1);
    check(5,2,1,1.0,400,3578.0,216.0,-282.0,-185.0,-1,-1);
    check(6,0,2,0.5,400,-1138.0,2827.0,-440.0,-282.0,-1,-1);
    check(7,1,2,1.5,400,-393.0,2230.0,-24.0,-150.0,-1,-1);
    check(8,2,2,1.0,400,56.0,-2688.0,-102.0,-529.0,-1,-1);
    check(50,3,-1,5.5,700,-6932.0,1392.0,-133.0,26.0,6,6);
    check(67,3,-1,3.0,600,7332.0,1702.0,-296.0,-69.0,1,4);
    check(69,3,-1,3.0,700,6697.0,-4616.0,-280.0,193.0,1,6);
    check(64,4,-1,-1.0,700,22.0,-2374.0,0.0,0.0,6,-1);
    check(68,4,-1,-1.0,650,1542.0,-5363.0,0.0,0.0,1,-1);
    check(70,6,-1,-1.0,1000,-424.0,-1706.0,0.0,0.0,2,-1);
  }
  
  @Test
  public void skill_tar_fire() throws Exception {
    read(0,0,0,0.5,400.0,2577.0,4227.0,669.0,-8.0,-1,-1);
    read(1,1,0,1.5,400.0,-2713.0,4875.0,-26.0,-65.0,-1,-1);
    read(2,2,0,1.0,400.0,-786.0,-951.0,178.0,-216.0,-1,-1);
    read(3,0,1,0.5,400.0,-4038.0,3637.0,198.0,153.0,-1,-1);
    read(4,1,1,1.5,400.0,-2645.0,3038.0,-18.0,-42.0,-1,-1);
    read(5,2,1,1.0,400.0,190.0,4653.0,564.0,152.0,-1,-1);
    read(6,0,2,0.5,400.0,1625.0,4127.0,378.0,-221.0,-1,-1);
    read(7,1,2,1.5,400.0,2280.0,3119.0,507.0,-240.0,-1,-1);
    read(8,2,2,1.0,400.0,-2229.0,2196.0,20.0,-164.0,-1,-1);
    read(32,3,-1,6.5,800.0,3063.0,-178.0,113.0,-7.0,8,8);
    read(34,3,-1,7.0,850.0,437.0,-2224.0,20.0,-95.0,9,9);
    read(36,3,-1,4.5,600.0,3640.0,2748.0,72.0,55.0,4,4);
    read(38,3,-1,6.5,800.0,-1363.0,-2135.0,-24.0,-35.0,8,8);
    read(45,3,-1,3.0,600.0,-4652.0,2603.0,152.0,-215.0,1,4);
    read(47,3,-1,3.0,850.0,-3641.0,5812.0,143.0,-229.0,1,9);
    read(48,5,-1,-1.0,1000.0,3495.0,3411.0,0.0,0.0,1,-1);
    
    int i = 0;
    // Standard Output Stream:
    parseAction("WAIT");
    parseAction("-3641 5812 300");
    parseAction("-584 -4869 300");
    
    // Standard Output Stream:
    parseAction("-1585 -2323 300");
    parseAction("-1369 -2128 300");
    parseAction("1439 3754 300");
    
    // Standard Output Stream:
    parseAction("3334 3024 300");
    parseAction("3205 3043 300");
    parseAction("-3860 3954 300");
    
    simulation.simulate(actions);
    
    read(0,0,0,0.5,400.0,3246.0,4219.0,535.0,-6.0,-1,-1);
    read(1,1,0,1.5,400.0,-2786.0,4785.0,-40.0,-82.0,-1,-1);
    read(2,2,0,1.0,400.0,-527.0,-1377.0,250.0,-245.0,-1,-1);
    read(3,0,1,0.5,400.0,-3612.0,3235.0,341.0,-321.0,-1,-1);
    read(4,1,1,1.5,400.0,-2669.0,2920.0,-41.0,-30.0,-1,-1);
    read(5,2,1,1.0,400.0,997.0,4630.0,606.0,-17.0,-1,-1);
    read(6,0,2,0.5,400.0,2027.0,3891.0,322.0,-189.0,-1,-1);
    read(7,1,2,1.5,400.0,2764.0,2881.0,175.0,-150.0,-1,-1);
    read(8,2,2,1.0,400.0,-2332.0,2075.0,-39.0,-176.0,-1,-1);
    read(32,3,-1,6.5,800.0,3253.0,-189.0,114.0,-7.0,8,8);
    read(34,3,-1,7.0,850.0,471.0,-2389.0,20.0,-99.0,9,9);
    read(36,3,-1,4.5,600.0,3794.0,2819.0,300.0,22.0,4,4);
    read(38,3,-1,6.5,800.0,-1439.0,-2249.0,-52.0,-77.0,8,8);
    read(45,3,-1,3.0,600.0,-4355.0,2307.0,178.0,-178.0,1,4);
    read(50,3,-1,3.0,850.0,-8835.0,-515.0,399.0,23.0,1,9);
    read(49,5,-1,-1.0,1000.0,1807.0,3479.0,0.0,0.0,2,-1);
  }
  
  @Test
  public void skill_tar_effect() throws Exception {
    read(0,0,0,0.5,400.0,4814.0,2347.0,-245.0,108.0,-1,-1);
    read(1,1,0,1.5,400.0,4527.0,3292.0,-239.0,317.0,-1,-1);
    read(2,2,0,1.0,400.0,1600.0,2013.0,234.0,-309.0,-1,-1);
    read(3,0,1,0.5,400.0,-704.0,-372.0,-366.0,-345.0,-1,-1);
    read(4,1,1,1.5,400.0,-1699.0,-65.0,-315.0,79.0,-1,-1);
    read(5,2,1,1.0,400.0,174.0,-671.0,-82.0,-60.0,-1,-1);
    read(6,0,2,0.5,400.0,861.0,133.0,372.0,67.0,-1,-1);
    read(7,1,2,1.5,400.0,1417.0,-868.0,135.0,-248.0,-1,-1);
    read(8,2,2,1.0,400.0,-769.0,773.0,-102.0,39.0,-1,-1);
    read(10,3,-1,3.5,800.0,-1962.0,1820.0,221.0,-97.0,2,8);
    read(11,3,-1,3.5,800.0,-579.0,-2616.0,0.0,242.0,2,8);
    read(14,3,-1,4.0,750.0,993.0,-2578.0,-3.0,149.0,3,7);
    read(15,3,-1,3.0,750.0,2927.0,3590.0,-159.0,-195.0,1,7);
    read(19,3,-1,3.0,800.0,8309.0,2899.0,-378.0,-132.0,1,8);
    read(20,3,-1,3.0,750.0,-8638.0,1394.0,395.0,-64.0,1,7);
    read(18,4,-1,-1.0,750.0,-2648.0,422.0,0.0,0.0,1,-1);
    
    int i = 0;
    // Standard Output Stream:
    parseAction("SKILL -5858 -4919 random tar");
    parseAction("2927 3590 300");
    parseAction("-2598 -4695 300");

    // Standard Output Stream:
    parseAction("-2282 767 300");
    parseAction("-1426 1644 300");
    parseAction("1315 260 300");

    // Standard Output Stream:
    parseAction("618 -2496 300");
    parseAction("855 -2181 300");
    parseAction("-968 -756 300");
    
    simulation.simulate(actions);
    
    check(0,0,0,0.5,400.0,4569.0,2455.0,-196.0,86.0,-1,-1);
    check(1,1,0,1.5,400.0,4091.0,3646.0,-305.0,248.0,-1,-1);
    check(2,2,0,1.0,400.0,1675.0,1450.0,56.0,-422.0,-1,-1);
    check(3,0,1,0.5,400.0,-1452.0,-442.0,-465.0,-154.0,-1,-1);
    check(4,1,1,1.5,400.0,-2017.0,237.0,-262.0,240.0,-1,-1);
    check(5,2,1,1.0,400.0,324.0,-541.0,113.0,97.0,-1,-1);
    check(6,0,2,0.5,400.0,1178.0,-397.0,253.0,-424.0,-1,-1);
    check(7,1,2,1.5,400.0,1473.0,-1300.0,39.0,-302.0,-1,-1);
    check(8,2,2,1.0,400.0,-910.0,515.0,-106.0,-194.0,-1,-1);
    check(10,3,-1,4.0,800.0,-1741.0,1723.0,133.0,-58.0,3,8);
    check(11,3,-1,4.0,800.0,-579.0,-2374.0,0.0,145.0,3,8);
    check(14,3,-1,4.5,750.0,990.0,-2429.0,-2.0,89.0,4,7);
    check(15,3,-1,3.0,750.0,2663.0,3266.0,-159.0,-195.0,1,7);
    check(19,3,-1,3.0,800.0,7774.0,2712.0,-321.0,-112.0,1,8);
    check(20,3,-1,3.0,750.0,-8078.0,1303.0,336.0,-54.0,1,7);
    check(18,4,-1,-1.0,750.0,-2648.0,422.0,0.0,0.0,1,-1);
  }
  
  @Test
  public void multipleSteps() throws Exception {
    read(0,0,0,0.5,400,-2464.0,4384.0,-748.0,-411.0,-1,-1);
    read(1,1,0,1.5,400,-2251.0,3496.0,-213.0,-453.0,-1,-1);
    read(2,2,0,1.0,400,4655.0,620.0,-154.0,-232.0,-1,-1);
    read(3,0,1,0.5,400,-1361.0,302.0,-265.0,-104.0,-1,-1);
    read(4,1,1,1.5,400,-63.0,317.0,-177.0,-28.0,-1,-1);
    read(5,2,1,1.0,400,-1615.0,-488.0,289.0,-64.0,-1,-1);
    read(6,0,2,0.5,400,-1042.0,-1290.0,457.0,-167.0,-1,-1);
    read(7,1,2,1.5,400,461.0,-725.0,-178.0,-68.0,-1,-1);
    read(8,2,2,1.0,400,-629.0,-289.0,-246.0,150.0,-1,-1);
    read(10,3,-1,4.0,700,-2487.0,-1280.0,-66.0,-37.0,3,6);
    read(11,3,-1,4.0,700,2247.0,-1415.0,-127.0,80.0,3,6);
    read(13,3,-1,3.0,750,5242.0,1684.0,-201.0,-15.0,1,7);
    
    
    resetActions();
    parseAction("-2251 3496 300");
    parseAction("-2487 -1280 300");
    parseAction("WAIT");
    parseAction("-2288 -1213 300");
    parseAction("-2376 -1289 300");
    parseAction("-874 -1393 300");
    parseAction("-3010 -1150 300");
    parseAction("-2375 -1249 300");
    parseAction("-1380 48 300");
    simulation.simulate(actions);
    
    /*
     * read(0,0,0,0.5,400,-3072.0,3390.0,-486.0,-796.0,-1,-1);
read(1,1,0,1.5,400,-2474.0,2843.0,-156.0,-457.0,-1,-1);
read(2,2,0,1.0,400,4501.0,388.0,-116.0,-174.0,-1,-1);
read(3,0,1,0.5,400,-1889.0,267.0,-494.0,38.0,-1,-1);
read(4,1,1,1.5,400,-288.0,267.0,-120.0,-7.0,-1,-1);
read(5,2,1,1.0,400,-1509.0,-967.0,71.0,-319.0,-1,-1);
read(6,0,2,0.5,400,-939.0,-1822.0,162.0,-558.0,-1,-1);
read(7,1,2,1.5,400,86.0,-829.0,-262.0,-73.0,-1,-1);
read(8,2,2,1.0,400,-1093.0,-56.0,-302.0,155.0,-1,-1);
read(10,3,-1,4.5,700,-2554.0,-1317.0,-60.0,-29.0,4,6);
read(11,3,-1,4.5,700,2120.0,-1335.0,-76.0,48.0,4,6);
read(13,3,-1,3.0,750,4882.0,1618.0,-216.0,-40.0,1,7);
     */
    
    resetActions();
    parseAction("-2474 2843 300");
    parseAction("-2554 -1317 300");
    parseAction("WAIT");
    parseAction("-2120 -1384 300");
    parseAction("-2494 -1339 300");
    parseAction("-848 -2061 300");
    parseAction("-2776 -788 300");
    parseAction("-2352 -1273 300");
    parseAction("-2081 150 300");
    simulation.simulate(actions);

    /*
    read(0,0,0,0.5,400,-3483.0,2520.0,-336.0,-690.0,-1,-1);
    read(1,1,0,1.5,400,-2511.0,2076.0,-24.0,-539.0,-1,-1);
    read(2,2,0,1.0,400,4385.0,214.0,-87.0,-131.0,-1,-1);
    read(3,0,1,0.5,400,-2572.0,-237.0,-541.0,163.0,-1,-1);
    read(4,1,1,1.5,400,-570.0,142.0,-197.0,-87.0,-1,-1);
    read(5,2,1,1.0,400,-1348.0,-1400.0,88.0,-252.0,-1,-1);
    read(6,0,2,0.5,400,-1170.0,-2370.0,-114.0,-595.0,-1,-1);
    read(7,1,2,1.5,400,-373.0,-938.0,-321.0,-76.0,-1,-1);
    read(8,2,2,1.0,400,-1635.0,152.0,-392.0,154.0,-1,-1);
    read(10,3,-1,5.0,700,-2614.0,-1350.0,-39.0,-67.0,5,6);
    read(11,3,-1,5.0,700,2044.0,-1287.0,-46.0,29.0,5,6);
    read(13,3,-1,3.0,750,4508.0,1526.0,-225.0,-55.0,1,7);
    */
    
    resetActions();
    parseAction("-2511 2076 300");
    parseAction("-2614 -1350 300");
    parseAction("WAIT");
    parseAction("0 0 0");
    parseAction("-2456 -1330 300");
    parseAction("-1372 -2713 300");
    parseAction("-2539 -822 300");
    parseAction("-2332 -1341 300");
    parseAction("-2721 -228 300");
    simulation.simulate(actions);
    
    
    check(0,0,0,0.5,400,-3303.0,1591.0,-81.0,-665.0,-1,-1);
    check(1,1,0,1.5,400,-2531.0,1334.0,51.0,-542.0,-1,-1);
    check(2,2,0,1.0,400,4298.0,83.0,-65.0,-98.0,-1,-1);
    check(3,0,1,0.5,400,-3113.0,-74.0,-433.0,130.0,-1,-1);
    check(4,1,1,1.5,400,-925.0,-68.0,-248.0,-147.0,-1,-1);
    check(5,2,1,1.0,400,-1256.0,-1853.0,74.0,-284.0,-1,-1);
    check(6,0,2,0.5,400,-1700.0,-2714.0,-436.0,-394.0,-1,-1);
    check(7,1,2,1.5,400,-890.0,-1054.0,-362.0,-81.0,-1,-1);
    check(8,2,2,1.0,400,-2310.0,207.0,-506.0,41.0,-1,-1);
    check(10,3,-1,5.0,700,-2653.0,-1417.0,-23.0,-40.0,5,6);
    check(11,3,-1,5.5,700,1998.0,-1258.0,-28.0,17.0,6,6);
    check(13,3,-1,3.0,750,4125.0,1418.0,-230.0,-65.0,1,7);
    
  }
  
  
  @Test
  public void backupAndRestore() throws Exception {
    read(0,0,0,0.5,400,-2464.0,4384.0,-748.0,-411.0,-1,-1);
    read(1,1,0,1.5,400,-2251.0,3496.0,-213.0,-453.0,-1,-1);
    read(2,2,0,1.0,400,4655.0,620.0,-154.0,-232.0,-1,-1);
    read(3,0,1,0.5,400,-1361.0,302.0,-265.0,-104.0,-1,-1);
    read(4,1,1,1.5,400,-63.0,317.0,-177.0,-28.0,-1,-1);
    read(5,2,1,1.0,400,-1615.0,-488.0,289.0,-64.0,-1,-1);
    read(6,0,2,0.5,400,-1042.0,-1290.0,457.0,-167.0,-1,-1);
    read(7,1,2,1.5,400,461.0,-725.0,-178.0,-68.0,-1,-1);
    read(8,2,2,1.0,400,-629.0,-289.0,-246.0,150.0,-1,-1);
    read(10,3,-1,4.0,700,-2487.0,-1280.0,-66.0,-37.0,3,6);
    read(11,3,-1,4.0,700,2247.0,-1415.0,-127.0,80.0,3,6);
    read(13,3,-1,3.0,750,5242.0,1684.0,-201.0,-15.0,1,7);
    
    resetActions();
    // Standard Output Stream:
    parseAction("-2251 3496 300");
    parseAction("-2487 -1280 300");
    parseAction("WAIT");

    // Standard Output Stream:
    parseAction("-2288 -1213 300");
    parseAction("-2376 -1289 300");
    parseAction("-874 -1393 300");

    // Standard Output Stream:
    parseAction("-3010 -1150 300");
    parseAction("-2375 -1249 300");
    parseAction("-1380 48 300");
      
    simulation.simulate(actions);
    
    Game.restore();
    
    // check
    check(0,0,0,0.5,400,-2464.0,4384.0,-748.0,-411.0,-1,-1);
    check(1,1,0,1.5,400,-2251.0,3496.0,-213.0,-453.0,-1,-1);
    check(2,2,0,1.0,400,4655.0,620.0,-154.0,-232.0,-1,-1);
    check(3,0,1,0.5,400,-1361.0,302.0,-265.0,-104.0,-1,-1);
    check(4,1,1,1.5,400,-63.0,317.0,-177.0,-28.0,-1,-1);
    check(5,2,1,1.0,400,-1615.0,-488.0,289.0,-64.0,-1,-1);
    check(6,0,2,0.5,400,-1042.0,-1290.0,457.0,-167.0,-1,-1);
    check(7,1,2,1.5,400,461.0,-725.0,-178.0,-68.0,-1,-1);
    check(8,2,2,1.0,400,-629.0,-289.0,-246.0,150.0,-1,-1);
    check(10,3,-1,4.0,700,-2487.0,-1280.0,-66.0,-37.0,3,6);
    check(11,3,-1,4.0,700,2247.0,-1415.0,-127.0,80.0,3,6);
    check(13,3,-1,3.0,750,5242.0,1684.0,-201.0,-15.0,1,7);
  }
  
  @Test
  public void shouldSendTar() throws Exception {
    read(0,0,0,0.5,400.0,550.0,-312.0,-37.0,7.0,-1,-1);
    read(1,1,0,1.5,400.0,1528.0,-737.0,381.0,194.0,-1,-1);
    read(2,2,0,1.0,400.0,615.0,799.0,81.0,4.0,-1,-1);
    read(3,0,1,0.5,400.0,268.0,-1255.0,-378.0,473.0,-1,-1);
    read(4,1,1,1.5,400.0,-190.0,1577.0,-263.0,-158.0,-1,-1);
    read(5,2,1,1.0,400.0,-523.0,590.0,-201.0,170.0,-1,-1);
    read(6,0,2,0.5,400.0,1945.0,-2708.0,-177.0,-89.0,-1,-1);
    read(7,1,2,1.5,400.0,1134.0,1527.0,14.0,171.0,-1,-1);
    read(8,2,2,1.0,400.0,2733.0,-547.0,-341.0,384.0,-1,-1);
    read(16,3,-1,5.5,700.0,-5918.0,-4795.0,-102.0,-86.0,6,6);
    read(25,3,-1,4.5,600.0,-40.0,5129.0,-1.0,166.0,4,4);
    read(34,3,-1,5.5,700.0,-2888.0,-363.0,-114.0,-14.0,6,6);
    read(40,3,-1,3.5,600.0,2174.0,-1502.0,-165.0,271.0,2,4);
    read(43,3,-1,3.0,600.0,-4532.0,-1936.0,221.0,103.0,1,4);
    read(45,3,-1,3.0,650.0,2229.0,-4148.0,-82.0,129.0,1,5);
    read(48,3,-1,3.0,750.0,1573.0,6124.0,-66.0,-253.0,1,7);
    read(51,3,-1,3.0,750.0,4823.0,-4730.0,-193.0,189.0,1,7);
    read(55,3,-1,3.0,750.0,4867.0,7272.0,-222.0,-332.0,1,7);
    read(26,4,-1,-1.0,700.0,2300.0,-1127.0,0.0,0.0,2,-1);
    read(42,4,-1,-1.0,750.0,-1523.0,2222.0,0.0,0.0,2,-1);
    read(44,4,-1,-1.0,750.0,-1305.0,-2309.0,0.0,0.0,1,-1);
    read(47,4,-1,-1.0,700.0,1228.0,2586.0,0.0,0.0,6,-1);
    read(50,4,-1,-1.0,700.0,539.0,-741.0,0.0,0.0,3,-1);
    read(54,4,-1,-1.0,650.0,1724.0,2292.0,0.0,0.0,1,-1);
    
    Game.players[0].rage = 300;
    
    AGSolution solution = new AGSolution(null);
    solution.random();
    
    
  }
  
  static void read(int unitId, int unitType, int playerId, double mass, double radius, double x, double y, double vx, double vy, int extra, int extra2) {
    Scanner in = new Scanner(""+unitId+" "+unitType+" "+playerId+" "+mass+" "+(int)radius+" "+(int)x+" "+(int)y+" "+(int)vx+" "+(int)vy+" "+extra+" "+extra2);
    in.useLocale(Locale.ENGLISH);
    entities[unitId] = Game.readOneUnit(in);
    Game.backup(); // we backup the number of entities each turn ...
  }
  
  protected void check(int unitId, int unitType, int playerId, double mass, double radius, double x, double y, double vx, double vy, int extra, int extra2) {
    Entity e = entities[unitId];
    if (e == null) {
      // created entity (wreck, skill effect ...)
      if (unitType == Game.WRECK) {
        for (int i=0;i<Game.tankers_FE;i++) {
          Tanker tanker = Game.tankers[i];
          if (tanker.dead) {
            for (int j=0;j<Game.wrecks_FE;j++) {
              Wreck wreck = Game.wrecks[j];
              if (tanker.position.x == wreck.position.x && tanker.position.y == wreck.position.y) {
                e = wreck;
              }
            }
          }
        }
      } else if (unitType == Game.SKILL_EFFECT_OIL || unitType == Game.SKILL_EFFECT_TAR) {
        for (int i=0;i<Game.skillEffects_FE;i++) {
          SkillEffect effect = Game.skillEffects[i];
          if (effect.position.x == x && effect.position.y == y ) {
            e = effect;
          }
        }
      }
    }
    assertThat(e.mass,is (mass));
    assertThat(e.radius, is(radius));
    
    assertThat(e.position.x, is (x));
    assertThat(e.position.y, is (y));
    assertThat(e.speed.vx, is (vx));
    assertThat(e.speed.vy, is (vy));

    if (unitType == Game.WRECK) {
      Wreck wreck = (Wreck)e;
      assertThat(wreck.water, is(extra));
    }
    if (unitType == Game.TANKER) {
      Tanker tanker = (Tanker)e;
      assertThat(tanker.water, is(extra));
      assertThat(tanker.size, is(extra2));
    }
    if (unitType == Game.SKILL_EFFECT_OIL || unitType == Game.SKILL_EFFECT_TAR) {
      SkillEffect skill = (SkillEffect)e;
      assertThat(skill.duration, is(extra));
    }
  }
}
