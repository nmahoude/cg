package lab;

import java.util.List;

import org.junit.Test;

import utils.Explore;
import utils.P;
import utils.Path;
import utils.PathItem;

public class PlayerTest {

  @Test
  public void basicAstar() throws Exception {
    Player player = new Player();
    
    player.width = 30;
    player.height = 15;
    player.cells = new char[player.width][player.height];
    initCells(player,    
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "???#####??????????????????????",
        "???#####??????????????????????",
        "???##T..??????????????????????",
        "???#####??????????????????????",
        "???#####??????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????",
        "??????????????????????????????"
        );
    player.kirk = new P(5,6);
    
    Explore e = new Explore(player.width, player.height, player.cells);
    P target = e.findClosedReachableCell(player.kirk);
    if (target != null) {
      Path astar = new Path(player.width, player.height, player.cells, player.kirk, target);
      List<PathItem> path = astar.find();
      if (!path.isEmpty()) {
         PathItem first = path.get(0);
         P pos = first.getPosition();
      } else {
        System.err.println("Path is empty");
      }
    } else {
      System.err.println("Plus de '?' Ã  trouver");
    }
  }

  private void initCells(Player player, String...rows) {
    for (int y=0;y<player.height;y++) {
      for (int x=0;x<player.width;x++) {
        player.cells[x][y] = rows[y].charAt(x);
      }
    }
  }
}
